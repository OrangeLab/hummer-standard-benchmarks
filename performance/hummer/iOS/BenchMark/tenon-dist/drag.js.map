{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///../node_modules/rollup-plugin-node-globals/src/global.js","webpack:///../node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///../tenon-utils/dist/tenon-utils.cjs.js","webpack:///../src/runtime/helper/fixed-helper.ts","webpack:///../src/runtime/helper/animation-helper.ts","webpack:///../src/runtime/nodes/components/image.ts","webpack:///../src/runtime/nodes/Base.ts","webpack:///../src/runtime/nodes/components/page.ts","webpack:///../src/runtime/nodes/components/view.ts","webpack:///../src/runtime/nodes/components/text.ts","webpack:///../src/runtime/nodes/components/input.ts","webpack:///../src/runtime/nodes/components/textarea.ts","webpack:///../src/runtime/nodes/components/button.ts","webpack:///../src/runtime/nodes/components/comment.ts","webpack:///../src/runtime/nodes/components/scroller.ts","webpack:///../src/runtime/nodes/components/anchor.ts","webpack:///../src/runtime/nodes/components/switch.ts","webpack:///../src/runtime/nodes/components/extend/refresh.ts","webpack:///../src/runtime/nodes/components/extend/loadmore.ts","webpack:///../src/runtime/nodes/component.ts","webpack:///../src/runtime/nodes/document.ts","webpack:///../src/runtime/nodeOps.ts","webpack:///../src/runtime/handlers/class.ts","webpack:///../src/runtime/handlers/style.ts","webpack:///../src/runtime/handlers/attrs.ts","webpack:///../src/runtime/handlers/events.ts","webpack:///../src/runtime/patchProp.ts","webpack:///../src/runtime/api.ts","webpack:///../src/runtime/helper/lifecycle-helper.ts","webpack:///../src/utils/event.ts","webpack:///../src/utils/style.ts","webpack:///../src/runtime/index.ts","webpack:///./src/drag/app.vue","webpack:///./src/drag/app.vue?9be7","webpack:///./src/drag/app.vue?3d9e","webpack:///./src/drag/entry.js"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","self","makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","normalizeStyle","value","isArray","res","item","normalized","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","_globalThis","activeEffect","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","arr","el","indexOf","splice","prototype","hasOwnProperty","hasOwn","call","Array","isMap","toTypeString","isSet","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","getGlobalThis","global","targetMap","WeakMap","effectStack","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","effect","options","raw","createReactiveEffect","lazy","stop","active","cleanup","onStop","uid","scheduler","undefined","includes","trackStack","push","shouldTrack","pop","resetTracking","id","allowRecurse","deps","delete","pauseTracking","last","track","target","type","depsMap","get","set","Map","dep","Set","has","add","trigger","newValue","oldTarget","effects","effectsToAdd","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","toRaw","hadKey","Number","result","method","l","args","apply","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","size","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isExtensible","rawType","targetTypeMap","toRawType","proxy","Proxy","isReactive","isProxy","r","Boolean","__v_isRef","shallowUnwrapHandlers","ref","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","newVal","toRef","object","ComputedRefImpl","getter","_setter","_dirty","_value","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","values","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","logError","contextVNode","console","error","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","bind","queueJob","job","pos","start","end","jobId","getId","middle","findInsertionIndex","queueFlush","flushJobs","queueCb","cb","activeQueue","pendingQueue","index","queuePreFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","a","b","devtools","Infinity","devtoolsInitApp","app","version","emit","Fragment","Text","Comment","Static","devtoolsUnmountApp","devtoolsComponentAdded","createDevtoolsComponentHook","devtoolsComponentUpdated","devtoolsComponentRemoved","hook","component","devtoolsComponentEmit","event","params","props","rawArgs","modelArg","modifiersKey","number","__VUE_PROD_DEVTOOLS__","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","deopt","__emits","emits","hasExtends","__VUE_OPTIONS_API__","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","isRenderingCompiledSlot","setCompiledSlotRendering","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","withScopeId","_id","withCtx","ctx","renderFnWithContext","openBlock","prevInstance","closeBlock","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","keys","some","filterModelListeners","cloneVNode","dirs","concat","transition","blockStack","createVNode","hasPropsChanged","prevProps","nextProps","emitsOptions","nextKeys","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","children","normalizeSuspenseSlot","default","s","singleRoot","child","isVNode","filterSingleRoot","initProps","rawProps","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","needCastKeys","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","String","getType","ctor","match","isSameType","expectedTypes","len","injectHook","currentInstance","prepend","hooks","wrappedHook","__weh","isUnmounted","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","_shallow","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","suspense","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","isKeepAlive","__isKeepAlive","onActivated","registerKeepAliveHook","onDeactivated","__wdc","current","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","RegExp","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","invokeDirectiveHook","prevVNode","bindings","oldBindings","binding","dir","createAppContext","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","warnHandler","components","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","plugin","install","mixin","directive","rootContainer","isHydrate","isSVG","__vue_app__","provide","prodEffectOptions","pendingBranch","setRef","rawRef","oldRawRef","parentSuspense","__asyncLoader","exposed","owner","oldRef","refs","doSet","invokeVNodeHook","traverseStaticChildren","n1","n2","ch1","ch2","c1","c2","dynamicChildren","patchFlag","cloneIfMounted","isTeleport","__isTeleport","NULL_DYNAMIC_COMPONENT","currentBlock","disableTracking","__v_isVNode","isSameVNodeType","normalizeKey","normalizeRef","dynamicProps","isBlockNode","cloned","normalizeChildren","isClassComponent","__vccOpts","klass","class","style","scopeId","slotScopeIds","ssContent","ssFallback","anchor","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","text","flag","slot","slotFlag","toMerge","existing","incoming","parentProvides","inject","treatDefaultAsFactory","arguments","shouldCacheAccess","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computedOptions","computed","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeUnmount","beforeDestroy","unmounted","destroyed","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","from","methodHandler","dataFn","resolveData","createWatcher","callHookWithMixinAndExtends","base","selfHook","path","segments","createPathGetter","mergeOptions","to","strats","m","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","resolveMergedOptions","$forceUpdate","update","$nextTick","$watch","PublicInstanceProxyHandlers","normalizedProps","accessCache","cssModule","publicGetter","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupStatefulComponent","setup","setupContext","createSetupContext","setupResult","resolvedResult","handleSetupResult","asyncDep","finishComponentSetup","devtoolsRawSetupState","_rc","getterOrOptions","setter","computed$1","commonjsHelpers.unwrapExports","tempStyle","attr","shadowItems","NODE_TEXT","tempArray","use","exports","ViewCache","FixedViewCache","handleFixedNodeByStyle","node","newStyle","oldPosition","position","newPosition","registerFixedNode","unRegisterFixedNode","fixedNode","__view_id","parents","getParentIds","ids","EasingType","AnimationStyle","animationId","handleBasicAnimation","animation","styles","duration","delay","repeatCount","easing","onStart","onEnd","element","transformStyle","ani","__GLOBAL__","BasicAnimation","handleDuration","handleDelay","on","addAnimation","POSITION","x","transformUnitValue","y","BACKGROUND_COLOR","getColor","WIDTH","HEIGHT","Base","_scopedId","__NAME","dataset","firstChild","lastChild","prevSibling","nextSibling","_defaultStyle","_style","_baseStyle","enabled","disabled","setStyle","updateStyle","CSSOM","elementStyle","className","getAttribute","scopedRuleSet","classMap","globalStyleArr","scopeStylesArr","_removeChild","deleteNodeByViewId","deleteCacheNode","removeChildWithFixed","onDestoryed","unlinkSiblings","appendChild","_onMounted","_onDestoryed","removeChild","insertBefore","hackForStyle","styleDynamicTransformer","search","_setAttribute","keyframes","KeyframeAnimation","tempKeyframes","keyframe","transformedStyles","percent","handleKeyframeAnimation","steps","step","_onStart","_onEnd","handleStepAnimation","func","addEventListener","removeEventListener","getRect","rect","View","Hummer","Image","Input","TextArea","Button","Scroller","HorizontalScroller","Switch","Refresh","NODE_REFRESH","LoadMore","NODE_LOADMORE","tag","ELEMNT_TAG_MAP","NODE_VIEW","NODE_SCROLLER","NODE_IMAGE","NODE_INPUT","NODE_TEXTAREA","NODE_BUTTON","NODE_SWITCH","isCustomNativeTag","factory","getComponent","setElementText","Anchor","comment","Page","nodeOps","insert","_insertBefore","_appendChild","createElement","document","createText","createComment","setText","parentNode","querySelector","selector","setScopeId","patchClass","prevValue","nextValue","setAttribute","patchStyle","styleTransformer","patchAttrs","patchEvents","rawName","invoker","createInvoker","initialValue","LifeCycleEnum","plugins","InputEventState","SwitchEventState","LIFECYCLE","ONLOAD","ONSHOW","ONHIDE","ONUNLOAD","ONBACK","applyLifeCycle","MatchType","createHydrationFns","__VUE__","__VUE_DEVTOOLS_GLOBAL_HOOK__","hydrateNode","hostInsert","hostRemove","hostPatchProp","patchProp","hostForcePatchProp","forcePatchProp","hostCreateElement","hostCreateText","hostCreateComment","hostSetText","hostSetElementText","hostParentNode","hostNextSibling","hostSetScopeId","hostCloneNode","cloneNode","hostInsertStaticContent","insertStaticContent","patch","container","parentComponent","optimized","getNextHostNode","unmount","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","moveStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","needCallTransitionHooks","persisted","beforeEnter","onVnodeMounted","enter","subTree","parentVNode","oldProps","newProps","onVnodeBeforeUpdate","patchProps","propsToUpdate","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","activate","mountComponent","updateComponent","initialVNode","suspenseId","pendingId","asyncResolved","bc","bm","bu","u","um","bum","da","rtg","rtc","createComponentInstance","renderer","setupComponent","registerDep","setupRenderEffect","placeholder","nextVNode","prevChildren","nextChildren","$stable","shouldUpdateComponent","updateComponentPreRender","originNext","nextTree","prevTree","updateHOCHostEl","scopedInitialVNode","rawPrevProps","kebabKey","camelizedKey","updateProps","needDeletionCheck","deletionComparisonTarget","updateSlots","prevShapeFlag","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","j","s1","s2","keyToNewIndexMap","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","arrI","getSequence","nextIndex","move","moveType","needTransition","leave","delayLeave","afterLeave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","performRemove","removeStaticNode","removeFragment","_vnode","mt","mc","pc","pbc","o","createApp","baseCreateRenderer","baseCreateApp","RuleKeyMap","curPositionStyle","handlePan","pageConfig","canScroll","positionX","positionY","translation","state","deltaX","deltaY","ruleSetMap","defaultRuleSetGroup","tagMap","idMap","group","ruleSet","defaultRuleSet","ruleKey","ruleList","rule","styleList","collectStyleGroup","App","mount","pageStyle","createPageView","extendOptions","lifeCycleMixins","onLoad","onShow","onHide","onUnload","onBack","applyPageMixin","initPageLifeCycle","Tenon"],"mappings":"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","file":"drag.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","export default (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst shallowReadonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        if (self._dirty) {\r\n            self._value = this.effect();\r\n            self._dirty = false;\r\n        }\r\n        track(self, \"get\" /* GET */, 'value');\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    // mark this as a compiled slot function.\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue(props);\r\n                    setCurrentInstance(null);\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [\r\n                    instance && instance.proxy\r\n                ]);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [\r\n                instance && instance.proxy\r\n            ]);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        // means unmount\r\n        value = null;\r\n    }\r\n    else if (isAsyncWrapper(vnode)) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    else if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n        value = vnode.component.exposed || vnode.component.proxy;\r\n    }\r\n    else {\r\n        value = vnode.el;\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense, null);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    unmount(children[i], parentComponent, parentSuspense, true, optimized);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        shouldCacheAccess = false;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        shouldCacheAccess = true;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    for (let i = 0; i < globalMixins.length; i++) {\r\n        callHookWithMixinAndExtends(name, type, globalMixins[i], instance);\r\n    }\r\n    callHookWithMixinAndExtends(name, type, options, instance);\r\n}\r\nfunction callHookWithMixinAndExtends(name, type, options, instance) {\r\n    const { extends: base, mixins } = options;\r\n    const selfHook = options[name];\r\n    if (base) {\r\n        callHookWithMixinAndExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        for (let i = 0; i < mixins.length; i++) {\r\n            callHookWithMixinAndExtends(name, type, mixins[i], instance);\r\n        }\r\n    }\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    shouldCacheAccess = false;\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    shouldCacheAccess = true;\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return i.exposed ? i.exposed : i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.9\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\n\nfunction transformAttr(style) {\r\n    let tempStyle = {};\r\n    Object.keys(style).forEach(key => {\r\n        let humpKey = transformHumpKey(key);\r\n        tempStyle[humpKey] = style[key];\r\n    });\r\n    return tempStyle;\r\n}\r\nfunction transformHumpKey(key) {\r\n    let humpKey = key.replace(/-(\\w)/g, ($0, $1) => {\r\n        return $1.toUpperCase();\r\n    });\r\n    return humpKey;\r\n}\n\nconst COLOR_MAP = {\r\n    aliceblue: '#f0f8ff',\r\n    antiquewhite: '#faebd7',\r\n    aqua: '#00ffff',\r\n    aquamarine: '#7fffd4',\r\n    azure: '#f0ffff',\r\n    beige: '#f5f5dc',\r\n    bisque: '#ffe4c4',\r\n    black: '#000000',\r\n    blanchedalmond: '#ffebcd',\r\n    blue: '#0000ff',\r\n    blueviolet: '#8a2be2',\r\n    brown: '#a52a2a',\r\n    burlywood: '#deb887',\r\n    cadetblue: '#5f9ea0',\r\n    chartreuse: '#7fff00',\r\n    chocolate: '#d2691e',\r\n    coral: '#ff7f50',\r\n    cornflowerblue: '#6495ed',\r\n    cornsilk: '#fff8dc',\r\n    crimson: '#dc143c',\r\n    cyan: '#00ffff',\r\n    darkblue: '#00008b',\r\n    darkcyan: '#008b8b',\r\n    darkgoldenrod: '#b8860b',\r\n    darkgray: '#a9a9a9',\r\n    darkgrey: '#a9a9a9',\r\n    darkgreen: '#006400',\r\n    darkkhaki: '#bdb76b',\r\n    darkmagenta: '#8b008b',\r\n    darkolivegreen: '#556b2f',\r\n    darkorange: '#ff8c00',\r\n    darkorchid: '#9932cc',\r\n    darkred: '#8b0000',\r\n    darksalmon: '#e9967a',\r\n    darkseagreen: '#8fbc8f',\r\n    darkslateblue: '#483d8b',\r\n    darkslategray: '#2f4f4f',\r\n    darkslategrey: '#2f4f4f',\r\n    darkturquoise: '#00ced1',\r\n    darkviolet: '#9400d3',\r\n    deeppink: '#ff1493',\r\n    deepskyblue: '#00bfff',\r\n    dimgray: '#696969',\r\n    dimgrey: '#696969',\r\n    dodgerblue: '#1e90ff',\r\n    firebrick: '#b22222',\r\n    floralwhite: '#fffaf0',\r\n    forestgreen: '#228b22',\r\n    fuchsia: '#ff00ff',\r\n    gainsboro: '#dcdcdc',\r\n    ghostwhite: '#f8f8ff',\r\n    gold: '#ffd700',\r\n    goldenrod: '#daa520',\r\n    gray: '#808080',\r\n    grey: '#808080',\r\n    green: '#008000',\r\n    greenyellow: '#adff2f',\r\n    honeydew: '#f0fff0',\r\n    hotpink: '#ff69b4',\r\n    indianred: '#cd5c5c',\r\n    indigo: '#4b0082',\r\n    ivory: '#fffff0',\r\n    khaki: '#f0e68c',\r\n    lavender: '#e6e6fa',\r\n    lavenderblush: '#fff0f5',\r\n    lawngreen: '#7cfc00',\r\n    lemonchiffon: '#fffacd',\r\n    lightblue: '#add8e6',\r\n    lightcoral: '#f08080',\r\n    lightcyan: '#e0ffff',\r\n    lightgoldenrodyellow: '#fafad2',\r\n    lightgray: '#d3d3d3',\r\n    lightgrey: '#d3d3d3',\r\n    lightgreen: '#90ee90',\r\n    lightpink: '#ffb6c1',\r\n    lightsalmon: '#ffa07a',\r\n    lightseagreen: '#20b2aa',\r\n    lightskyblue: '#87cefa',\r\n    lightslateblue: '#8470ff',\r\n    lightslategray: '#778899',\r\n    lightslategrey: '#778899',\r\n    lightsteelblue: '#b0c4de',\r\n    lightyellow: '#ffffe0',\r\n    lime: '#00ff00',\r\n    limegreen: '#32cd32',\r\n    linen: '#faf0e6',\r\n    magenta: '#ff00ff',\r\n    maroon: '#800000',\r\n    mediumaquamarine: '#66cdaa',\r\n    mediumblue: '#0000cd',\r\n    mediumorchid: '#ba55d3',\r\n    mediumpurple: '#9370db',\r\n    mediumseagreen: '#3cb371',\r\n    mediumslateblue: '#7b68ee',\r\n    mediumspringgreen: '#00fa9a',\r\n    mediumturquoise: '#48d1cc',\r\n    mediumvioletred: '#c71585',\r\n    midnightblue: '#191970',\r\n    mintcream: '#f5fffa',\r\n    mistyrose: '#ffe4e1',\r\n    moccasin: '#ffe4b5',\r\n    navajowhite: '#ffdead',\r\n    navy: '#000080',\r\n    oldlace: '#fdf5e6',\r\n    olive: '#808000',\r\n    olivedrab: '#6b8e23',\r\n    orange: '#ffa500',\r\n    orangered: '#ff4500',\r\n    orchid: '#da70d6',\r\n    palegoldenrod: '#eee8aa',\r\n    palegreen: '#98fb98',\r\n    paleturquoise: '#afeeee',\r\n    palevioletred: '#db7093',\r\n    papayawhip: '#ffefd5',\r\n    peachpuff: '#ffdab9',\r\n    peru: '#cd853f',\r\n    pink: '#ffc0cb',\r\n    plum: '#dda0dd',\r\n    powderblue: '#b0e0e6',\r\n    purple: '#800080',\r\n    rebeccapurple: '#663399',\r\n    red: '#ff0000',\r\n    rosybrown: '#bc8f8f',\r\n    royalblue: '#4169e1',\r\n    saddlebrown: '#8b4513',\r\n    salmon: '#fa8072',\r\n    sandybrown: '#f4a460',\r\n    seagreen: '#2e8b57',\r\n    seashell: '#fff5ee',\r\n    sienna: '#a0522d',\r\n    silver: '#c0c0c0',\r\n    skyblue: '#87ceeb',\r\n    slateblue: '#6a5acd',\r\n    slategray: '#708090',\r\n    slategrey: '#708090',\r\n    snow: '#fffafa',\r\n    springgreen: '#00ff7f',\r\n    steelblue: '#4682b4',\r\n    tan: '#d2b48c',\r\n    teal: '#008080',\r\n    thistle: '#d8bfd8',\r\n    tomato: '#ff6347',\r\n    transparent: '#000000',\r\n    turquoise: '#40e0d0',\r\n    violet: '#ee82ee',\r\n    violetred: '#d02090',\r\n    wheat: '#f5deb3',\r\n    white: '#ffffff',\r\n    whitesmoke: '#f5f5f5',\r\n    yellow: '#ffff00',\r\n    yellowgreen: '#9acd32'\r\n};\r\nfunction getColor(color) {\r\n    return COLOR_MAP[color] || color;\r\n}\n\nfunction getEnvironmentInfo() {\r\n    return {};\r\n}\n\nfunction traverseArr(arr, callback) {\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let item = arr[i];\r\n        let result = callback(item, i);\r\n        if (!result) {\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction makeMap(str, expectedLowerCase = false) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectedLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\r\n}\r\nfunction makeMapByArr(list, expectedLowerCase = false) {\r\n    const map = Object.create(null);\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectedLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\r\n}\n\nconst unitAttrs = [\r\n    'font-size', 'placeholder-font-size',\r\n    'flex-basis',\r\n    'width', 'max-width', 'min-width', 'height', 'max-height', 'min-height',\r\n    'padding', 'padding-left', 'padding-right', 'padding-bottom', 'padding-top',\r\n    'margin', 'margin-left', 'margin-right', 'margin-bottom', 'margin-top',\r\n    'left', 'right', 'top', 'bottom',\r\n    'border-width', 'border-left-width', 'border-right-width', 'border-top-width', 'border-bottom-width',\r\n    'border-radius', 'border-top-left-radius', 'border-top-right-radius', 'border-bottom-left-radius', 'border-bottom-right-radius'\r\n];\r\nconst isNeedUnitTrasform = makeMapByArr(unitAttrs);\r\nconst isRemUnit = /rem$/;\r\nconst isVUnit = /v(h|w|min|max)$/;\r\nconst isCpxUnit = /cpx$/;\r\nfunction transformUnit(style) {\r\n    Object.keys(style).forEach(key => {\r\n        if (isNeedUnitTrasform(key)) {\r\n            let value = transformUnitValue(style[key]);\r\n            style[key] = value;\r\n        }\r\n    });\r\n    return style;\r\n}\r\nfunction transformUnitValue(value) {\r\n    if (isRemUnit.test(value)) {\r\n        return transfromRem(value);\r\n    }\r\n    else if (isVUnit.test(value)) {\r\n        return transformVUnit(value);\r\n    }\r\n    else if (isCpxUnit.test(value)) {\r\n        return transfromCpx(value);\r\n    }\r\n    return value;\r\n}\r\nfunction hexify(color) {\r\n    var values = color\r\n        .replace(/rgba?\\(/, '')\r\n        .replace(/\\)/, '')\r\n        .replace(/[\\s+]/g, '')\r\n        .split(',');\r\n    var a = parseFloat(values[3] || \"1\"), r = parseInt(values[0]), g = parseInt(values[1]), b = parseInt(values[2]), a = Math.floor(a * 255);\r\n    return \"#\" +\r\n        (\"0\" + r.toString(16)).slice(-2) +\r\n        (\"0\" + g.toString(16)).slice(-2) +\r\n        (\"0\" + b.toString(16)).slice(-2) +\r\n        (\"0\" + a.toString(16)).slice(-2);\r\n}\r\nfunction transfromRem(value) {\r\n    let num = (Number(value.replace(/rem/, '')) * 100).toFixed(2);\r\n    return num + 'hm';\r\n}\r\nfunction transfromCpx(value) {\r\n    let num = value.replace(/cpx/, 'hm');\r\n    return num;\r\n}\r\nfunction transformVUnit(value) {\r\n    return value;\r\n}\n\nconst colorAttrs = \"color,background-color,border-color,border-top-color,border-left-color,border-right-color,border-bottom-color,placeholder-color,cursor-color\";\r\nconst isColorAttr = makeMap(colorAttrs);\r\nconst rgbaReg = /rgba?/;\r\nfunction transformColor(style) {\r\n    Object.keys(style).forEach(key => {\r\n        if (isColorAttr(key)) {\r\n            let value = style[key];\r\n            if (isRgba(value)) {\r\n                style[key] = hexify(value);\r\n            }\r\n            else {\r\n                style[key] = transformColorStyle(value);\r\n            }\r\n        }\r\n    });\r\n    return style;\r\n}\r\nfunction isRgba(color) {\r\n    return rgbaReg.test(color);\r\n}\r\nfunction transformColorStyle(value) {\r\n    if (/^#/.test(value) && value.length === 4) {\r\n        return normalizeColor(value);\r\n    }\r\n    else {\r\n        return getColor(value);\r\n    }\r\n}\r\nfunction normalizeColor(value) {\r\n    return value.replace(/(\\w)/ig, function (match) {\r\n        return `${match}${match}`;\r\n    });\r\n}\n\nconst commonAttrs = [\"margin\", \"padding\", \"border-width\", \"border-style\", \"border-color\"];\r\nconst borderAttrs = [\"border-radius\"];\r\nconst attrs$2 = commonAttrs.concat(borderAttrs);\r\nconst isDirectAttr = makeMapByArr(commonAttrs);\r\nconst isBorderDirectAttr = makeMapByArr(borderAttrs);\r\nfunction transformBreakToken(style) {\r\n    let tempStyle = Object.assign({}, style);\r\n    attrs$2.forEach(attr => {\r\n        if (!style[attr]) {\r\n            return;\r\n        }\r\n        if (isDirectAttr(attr)) {\r\n            delete tempStyle[attr];\r\n            tempStyle = extend(breakDirectionAttr({\r\n                attr: attr,\r\n                value: style[attr]\r\n            }), tempStyle);\r\n        }\r\n        else if (isBorderDirectAttr(attr)) {\r\n            delete tempStyle[attr];\r\n            tempStyle = extend(breakBorderRadiusAttr({\r\n                attr: attr,\r\n                value: style[attr]\r\n            }, /\\s+/), tempStyle);\r\n        }\r\n    });\r\n    return tempStyle;\r\n}\r\nfunction breakDirectionAttr({ attr, value }, splitReg = /\\s/) {\r\n    let vals = value.split(splitReg).map(item => {\r\n        return item.trim();\r\n    });\r\n    let top, right, bottom, left;\r\n    switch (vals.length) {\r\n        case 1:\r\n            top = vals[0];\r\n            right = vals[0];\r\n            bottom = vals[0];\r\n            left = vals[0];\r\n            break;\r\n        case 2:\r\n            top = vals[0];\r\n            right = vals[1];\r\n            bottom = vals[0];\r\n            left = vals[1];\r\n            break;\r\n        case 3:\r\n            top = vals[0];\r\n            right = vals[1];\r\n            bottom = vals[2];\r\n            left = vals[1];\r\n            break;\r\n        case 4:\r\n            top = vals[0];\r\n            right = vals[1];\r\n            bottom = vals[2];\r\n            left = vals[3];\r\n            break;\r\n        default:\r\n            top = 0;\r\n            bottom = 0;\r\n            left = 0;\r\n            right = 0;\r\n            break;\r\n    }\r\n    return {\r\n        [attr + '-top']: top,\r\n        [attr + '-right']: right,\r\n        [attr + '-bottom']: bottom,\r\n        [attr + '-left']: left,\r\n    };\r\n}\r\nfunction breakBorderRadiusAttr({ attr, value }, splitReg = /\\s+/) {\r\n    let vals = value.split(splitReg).map(item => {\r\n        return item.trim();\r\n    });\r\n    let topLeft, topRight, bottomLeft, bottomRight;\r\n    if (vals.length === 1) {\r\n        return {\r\n            'border-radius': vals[0]\r\n        };\r\n    }\r\n    switch (vals.length) {\r\n        case 1:\r\n            topLeft = vals[0];\r\n            topRight = vals[0];\r\n            bottomRight = vals[0];\r\n            bottomLeft = vals[0];\r\n            break;\r\n        case 2:\r\n            topLeft = vals[0];\r\n            topRight = vals[1];\r\n            bottomRight = vals[0];\r\n            bottomLeft = vals[1];\r\n            break;\r\n        case 3:\r\n            topLeft = vals[0];\r\n            topRight = vals[1];\r\n            bottomRight = vals[2];\r\n            bottomLeft = vals[1];\r\n            break;\r\n        case 4:\r\n            topLeft = vals[0];\r\n            topRight = vals[1];\r\n            bottomRight = vals[2];\r\n            bottomLeft = vals[3];\r\n            break;\r\n        default:\r\n            topLeft = 0;\r\n            topRight = 0;\r\n            bottomRight = 0;\r\n            bottomLeft = 0;\r\n            break;\r\n    }\r\n    return {\r\n        ['border-top-left-radius']: topLeft,\r\n        ['border-top-right-radius']: topRight,\r\n        ['border-bottom-right-radius']: bottomRight,\r\n        ['border-bottom-left-radius']: bottomLeft,\r\n    };\r\n}\n\nconst attrs$1 = [\"border\", \"border-left\", \"border-right\", \"border-top\", \"border-bottom\"];\r\nconst borderBreakReadius = /([\\.\\w]+)\\s+(\\w+)\\s+([\\w#\\s\\(,\\.\\)]+)/;\r\nfunction transformBorder(style) {\r\n    let tempStyle = Object.assign({}, style);\r\n    attrs$1.forEach(attr => {\r\n        if (!style[attr]) {\r\n            return;\r\n        }\r\n        else {\r\n            delete tempStyle[attr];\r\n            tempStyle = extend(transformBorderStyle({\r\n                attr: attr,\r\n                value: style[attr]\r\n            }), tempStyle);\r\n        }\r\n    });\r\n    return tempStyle;\r\n}\r\nfunction transformBorderStyle({ attr, value }) {\r\n    let matches = value.match(borderBreakReadius);\r\n    if (!matches) {\r\n        return {};\r\n    }\r\n    let [, borderWidth, borderStyle, borderColor] = matches;\r\n    return {\r\n        [attr + \"-width\"]: borderWidth,\r\n        [attr + \"-style\"]: borderStyle,\r\n        [attr + \"-color\"]: borderColor,\r\n    };\r\n}\n\nconst attrs = [\"box-shadow\"];\r\nfunction transformShadow(style) {\r\n    traverseArr(attrs, function (item, index) {\r\n        if (style[item]) {\r\n            style[\"shadow\"] = getShadowValue(style[item]);\r\n            delete style[item];\r\n        }\r\n    });\r\n    return style;\r\n}\r\nfunction getShadowValue(value) {\r\n    let values = value;\r\n    if (!values) {\r\n        return '';\r\n    }\r\n    const shadowItems = transformValue(value);\r\n    if (shadowItems.length > 4) {\r\n        values = [\r\n            shadowItems[0],\r\n            shadowItems[1],\r\n            shadowItems[2],\r\n            shadowItems[4]\r\n        ].join(' ');\r\n    }\r\n    else {\r\n        values = shadowItems.join(' ');\r\n    }\r\n    return values;\r\n}\r\nfunction transformValue(value) {\r\n    const rgbReg = /rgb?/, rgbaReg = /rgba?/;\r\n    let values = value, shadowItems = new Array();\r\n    if (rgbReg.test(values)) {\r\n        shadowItems = [\r\n            ...values.slice(0, values.indexOf('rgb')).trim().split(/\\s/),\r\n            values.slice(values.indexOf('rgb'))\r\n        ];\r\n    }\r\n    else {\r\n        shadowItems = values.split(/\\s/);\r\n    }\r\n    for (let i = 0; i < shadowItems.length; i++) {\r\n        if (rgbaReg.test(shadowItems[i])) {\r\n            shadowItems[i] = hexify(shadowItems[i]);\r\n        }\r\n        else {\r\n            shadowItems[i] = transformUnitValue(shadowItems[i]);\r\n        }\r\n    }\r\n    return shadowItems;\r\n}\n\nconst NODE_VIEW = Symbol('NODE_VIEW');\r\nconst NODE_TEXT = Symbol('NODE_TEXT');\r\nconst NODE_IMAGE = Symbol('NODE_IMAGE');\r\nconst NODE_BUTTON = Symbol('NODE_BUTTON');\r\nconst NODE_TEXTAREA = Symbol('NODE_TEXTAREA');\r\nconst NODE_INPUT = Symbol('NODE_INPUT');\r\nconst NODE_SWITCH = Symbol('NODE_SWITCH');\r\nconst NODE_SCROLLER = Symbol('NODE_SCROLLER');\r\nconst NODE_VIEW_PAGER = Symbol('NODE_VIEW_PAGER');\r\nconst NODE_LIST = Symbol('NODE_LIST');\r\nconst NODE_DIALOG = Symbol('NODE_DIALOG');\r\nconst NODE_ANIMATION_VIEW = Symbol('NODE_ANIMATION_VIEW');\r\nconst NODE_COMMENT = Symbol('NODE_COMMENT');\r\nconst NODE_ANCHOR = Symbol('NODE_ANCHOR');\r\nconst NODE_REFRESH = Symbol('NODE_REFRESH');\r\nconst NODE_LOADMORE = Symbol('NODE_LOADMORE');\r\nconst ELEMNT_TAG_MAP = {\r\n    [NODE_VIEW]: 'view',\r\n    [NODE_TEXT]: 'text',\r\n    [NODE_IMAGE]: 'image',\r\n    [NODE_BUTTON]: 'button',\r\n    [NODE_TEXTAREA]: 'textarea',\r\n    [NODE_INPUT]: 'input',\r\n    [NODE_SWITCH]: 'switch',\r\n    [NODE_SCROLLER]: 'scroller',\r\n    [NODE_VIEW_PAGER]: 'viewpager',\r\n    [NODE_LIST]: 'list',\r\n    [NODE_DIALOG]: 'dialog',\r\n    [NODE_ANIMATION_VIEW]: 'animation',\r\n    [NODE_ANCHOR]: 'anchor',\r\n    [NODE_REFRESH]: 'refresh',\r\n    [NODE_LOADMORE]: 'loadmore'\r\n};\n\nconst borderRadius = \"border-radius,border-top-left-radius,border-top-right-radius,border-bottom-left-radius,border-bottom-right-radius\";\r\nconst isBorderRadius = makeMap(borderRadius);\r\nfunction transformAdapter(style) {\r\n    let tempStyle = Object.assign({}, style);\r\n    tempStyle = hackForDefaultFlex(tempStyle);\r\n    tempStyle = hackForWhiteSpace(tempStyle);\r\n    return tempStyle;\r\n}\r\nfunction dynamicTransformAdapter(style, view) {\r\n    let tempStyle = {};\r\n    tempStyle = hackForBorderRadius(view, style);\r\n    return tempStyle;\r\n}\r\nfunction hackForWhiteSpace(style) {\r\n    if (style['white-space'] === 'nowrap') {\r\n        style['textLineClamp'] = \"1\";\r\n    }\r\n    return style;\r\n}\r\nfunction hackForBorderRadius(view, style) {\r\n    if (view && view.__NAME === NODE_IMAGE && hasSpecialAttr(style, isBorderRadius)) {\r\n        style['overflow'] = 'hidden';\r\n    }\r\n    if (hasSpecialAttr(style, isBorderRadius)) {\r\n        transformBorderRadius(style);\r\n    }\r\n    return style;\r\n}\r\nfunction hackForDefaultFlex(style) {\r\n    if (style['display'] === 'flex' && !style['flex-direction']) {\r\n        style['flex-direction'] = 'row';\r\n    }\r\n    return style;\r\n}\r\nfunction hasSpecialAttr(obj, func) {\r\n    return Object.keys(obj).some(key => {\r\n        return func(key);\r\n    });\r\n}\r\nfunction transformBorderRadius(style) {\r\n    if (!style.width) {\r\n        return;\r\n    }\r\n    let [, width, unit] = style.width.split(/([\\d\\.]+)/);\r\n    if (unit === '%') {\r\n        return;\r\n    }\r\n    Object.keys(style).forEach(key => {\r\n        if (isBorderRadius(key)) {\r\n            style[key] = getBorderRadius(style[key], { width, unit });\r\n        }\r\n    });\r\n}\r\nfunction getBorderRadius(value, { width, unit }) {\r\n    let [, bPercent, bUnit] = value.split(/([\\d\\.]+)/);\r\n    if (bUnit === '%') {\r\n        return (width * parseFloat(bPercent) / 100).toFixed(2) + unit;\r\n    }\r\n    return value;\r\n}\n\nconst CLIP_LIST = [\r\n    'border-box',\r\n    'padding-box',\r\n    'content-box',\r\n    'text'\r\n];\r\nconst REPEAT_LIST = [\r\n    'repeat-x',\r\n    'repeat-y',\r\n    'repeat',\r\n    'space',\r\n    'round',\r\n    'no-repeat'\r\n];\r\nconst SIZE_LIST = [\r\n    'contain',\r\n    'cover'\r\n];\n\nconst isUrl = /url\\((?:\"|')/;\r\nconst isImageBase64Reg = /url\\(data:/;\r\nconst isLinearGradient = /linear\\-gradient/;\r\nconst imageUrlReg = /url\\((?:\"|')?([\\w\\W]+)(?:\"|')\\)/;\r\nconst imageBase64Reg = /url\\(([\\w\\W]+)\\)/;\r\nconst linearReg = /linear\\-gradient\\(([\\w\\W]+)\\)/;\r\nfunction transformBackground(style) {\r\n    let tempStyle = Object.assign({}, style);\r\n    if (tempStyle['background-image']) {\r\n        let value = tempStyle['background-image'];\r\n        if (isLinearGradient.test(value.trim())) {\r\n            delete tempStyle['background-image'];\r\n            let matches = value.match(linearReg);\r\n            let linearValue = matches && matches[1] || '';\r\n            tempStyle['background-color'] = 'linear-gradient(' + transformLinear(linearValue) + ')';\r\n        }\r\n        else {\r\n            tempStyle['background-image'] = transformBackgroundImage(value);\r\n        }\r\n    }\r\n    if (tempStyle['background']) {\r\n        const value = tempStyle['background'];\r\n        delete tempStyle['background'];\r\n        tempStyle = Object.assign(Object.assign({}, splitBackground(value)), tempStyle);\r\n    }\r\n    return tempStyle;\r\n}\r\nfunction splitBackground(value) {\r\n    let newBackgroundMap = {};\r\n    const colorKeys = Object.keys(COLOR_MAP).join('|');\r\n    const color = '(#\\\\w{3,8})|(rgba?\\\\(.+\\\\))';\r\n    const isColor = new RegExp(`(${color}|${colorKeys})`);\r\n    if (isColor.test(value)) {\r\n        const match = isColor.exec(value);\r\n        if (match) {\r\n            newBackgroundMap['background-color'] = match[0];\r\n        }\r\n    }\r\n    if (isUrl.test(value)) {\r\n        const urlMatch = /url\\(.+\\)/;\r\n        const match = urlMatch.exec(value);\r\n        let backgorundImage = match && match[0];\r\n        if (backgorundImage) {\r\n            newBackgroundMap['background-image'] = transformBackgroundImage(backgorundImage);\r\n        }\r\n    }\r\n    const clipMatch = matchKeyList(CLIP_LIST, value);\r\n    if (clipMatch) {\r\n        newBackgroundMap['backgrond-clip'] = clipMatch;\r\n    }\r\n    const repeatMatch = matchKeyList(REPEAT_LIST, value);\r\n    if (repeatMatch) {\r\n        newBackgroundMap['background-repeat'] = repeatMatch;\r\n    }\r\n    const sizeMatch = matchKeyList(SIZE_LIST, value);\r\n    if (sizeMatch) {\r\n        newBackgroundMap['background-size'] = sizeMatch;\r\n    }\r\n    return newBackgroundMap;\r\n}\r\nfunction matchKeyList(list, value) {\r\n    const matchList = list.join('|');\r\n    const isList = new RegExp(matchList);\r\n    if (isList.test(value)) {\r\n        const match = isList.exec(value);\r\n        if (match) {\r\n            return match[0];\r\n        }\r\n    }\r\n    return '';\r\n}\r\nfunction transformBackgroundImage(value) {\r\n    let backgroundImage = value.trim();\r\n    if (isUrl.test(backgroundImage)) {\r\n        let matches = backgroundImage.match(imageUrlReg);\r\n        return (matches && matches[1]) || '';\r\n    }\r\n    else if (isImageBase64Reg.test(backgroundImage)) {\r\n        let matches = backgroundImage.match(imageBase64Reg);\r\n        return (matches && matches[1]) || '';\r\n    }\r\n    return '';\r\n}\r\nfunction transformLinear(value) {\r\n    let backgroundLinear = value.replace(/\\s+/g, '');\r\n    let isRgba = /rgba?/;\r\n    let rgbaReg = /rgba\\(\\d+,\\d+,\\d+,[\\d\\.]+\\)/g;\r\n    if (isRgba.test(backgroundLinear)) {\r\n        let matcheList = backgroundLinear.match(rgbaReg);\r\n        for (let item in matcheList) {\r\n            backgroundLinear = backgroundLinear.replace(matcheList[parseInt(item)], hexify(matcheList[parseInt(item)]));\r\n        }\r\n    }\r\n    backgroundLinear = backgroundLinear.split(',').map(res => getColor(res)).join(' ');\r\n    return backgroundLinear;\r\n}\n\nfunction transformFlex(style) {\r\n    let tempStyle = Object.assign({}, style);\r\n    if (tempStyle['flex']) {\r\n        let value = tempStyle['flex'];\r\n        delete tempStyle['flex'];\r\n        tempStyle = Object.assign(Object.assign({}, splitFlexStyle(value)), tempStyle);\r\n    }\r\n    return tempStyle;\r\n}\r\nfunction splitFlexStyle(value) {\r\n    let values = value.split(/\\s+/);\r\n    let tempStyle = {};\r\n    let [grow, shrink, basis] = values;\r\n    if (grow) {\r\n        if ((/\\d+(px|rem)/).test(grow)) {\r\n            tempStyle['flex-basis'] = grow;\r\n        }\r\n        else {\r\n            tempStyle['flex-grow'] = grow;\r\n        }\r\n    }\r\n    if (shrink) {\r\n        if ((/\\d+px/).test(shrink)) {\r\n            tempStyle['flex-basis'] = shrink;\r\n        }\r\n        else {\r\n            tempStyle['flex-shrink'] = shrink;\r\n        }\r\n    }\r\n    basis && (tempStyle['flex-basis'] = basis);\r\n    return tempStyle;\r\n}\n\nfunction transformTransform(style) {\r\n    let tempStyle = Object.assign({}, style);\r\n    if (tempStyle['transform']) {\r\n        let value = tempStyle['transform'];\r\n        tempStyle = Object.assign(Object.assign({}, tempStyle), splitToArray(transTranslateUnit(replaceDeg(value))));\r\n    }\r\n    return tempStyle;\r\n}\r\nfunction splitToArray(params) {\r\n    return {\r\n        transform: params.trim().split(/\\s+/g).join(',')\r\n    };\r\n}\r\nfunction replaceDeg(str) {\r\n    return str.replace(/deg/g, '');\r\n}\r\nfunction transTranslateUnit(str) {\r\n    let arr = (str.replace(/\\s/g, '').match(/[a-zA-Z0-9]+\\(.+?\\)/g)) || [];\r\n    arr.map((item, index) => {\r\n        if (item.indexOf('translate') > -1 || item.indexOf('position') > -1) {\r\n            let temp = item.match(/[^(][a-zA-Z0-9,]+(?=\\))/g);\r\n            let key = item.split('(')[0];\r\n            let value = temp ? temp[0] : '0';\r\n            value = value.split(',').map(v => transformUnitValue(v)).join(',');\r\n            arr[index] = `${key}(${value})`;\r\n        }\r\n    });\r\n    return arr.join(' ');\r\n}\n\nconst transitionFullProperty = ['transition-delay', 'transition-duration', 'transition-property', 'transition-timing-function'];\r\nfunction transformTransition(style) {\r\n    let tempStyle = Object.assign({}, style);\r\n    transitionFullProperty.forEach(property => {\r\n        if (tempStyle[property]) {\r\n            let value = tempStyle[property];\r\n            tempStyle = Object.assign(Object.assign({}, getHummerProp(property, value)), tempStyle);\r\n            delete tempStyle[property];\r\n        }\r\n    });\r\n    if (tempStyle['transition']) {\r\n        let value = tempStyle['transition'];\r\n        tempStyle = Object.assign(Object.assign({}, splitToFullProps(value)), tempStyle);\r\n        delete tempStyle['transition'];\r\n    }\r\n    return tempStyle;\r\n}\r\nfunction getHummerProp(property, value) {\r\n    let obj = {};\r\n    obj[property] = isTime(value) ? value.replace('s', '') : value;\r\n    return obj;\r\n}\r\nfunction splitToFullProps(params) {\r\n    let transitionPropertyArray = [];\r\n    let transitionDurationArray = [];\r\n    let transitionTimingFunctionArray = [];\r\n    let transitionDelayArray = [];\r\n    let transitionArray = params.split(',');\r\n    transitionArray.forEach(transition => {\r\n        let transitonValues = transition.trim().split(/\\s+/g);\r\n        transitonValues = getFullValues(transitonValues);\r\n        transitionPropertyArray.push(transitonValues[0]);\r\n        transitionDurationArray.push(transitonValues[1].replace('s', ''));\r\n        transitionTimingFunctionArray.push(transitonValues[2]);\r\n        transitionDelayArray.push(transitonValues[3].replace('s', ''));\r\n    });\r\n    return {\r\n        'transition-property': transitionPropertyArray.join(','),\r\n        'transition-duration': transitionDurationArray.join(','),\r\n        'transition-timing-function': transitionTimingFunctionArray[0],\r\n        'transition-delay': transitionDelayArray[0]\r\n    };\r\n}\r\nfunction getFullValues(transitonValues) {\r\n    let tempArray = [];\r\n    tempArray = [...transitonValues];\r\n    if (transitonValues.length === 2) {\r\n        tempArray = [...transitonValues, 'ease', '0s'];\r\n    }\r\n    else if (transitonValues.length === 3) {\r\n        if (isTime(transitonValues[2])) {\r\n            tempArray = [transitonValues[0], transitonValues[1], 'ease', transitonValues[2]];\r\n        }\r\n        else {\r\n            tempArray = [...transitonValues, '0s'];\r\n        }\r\n    }\r\n    return tempArray;\r\n}\r\nfunction isTime(str) {\r\n    return /^\\d*[s]$/.test(str);\r\n}\n\nclass StyleTransformer {\r\n    constructor() {\r\n        this.middlewares = [];\r\n        this.registerMiddleware();\r\n    }\r\n    registerMiddleware() {\r\n        this\r\n            .use(transformAdapter)\r\n            .use(transformBreakToken)\r\n            .use(transformBackground)\r\n            .use(transformTransform)\r\n            .use(transformTransition)\r\n            .use(transformFlex)\r\n            .use(transformBorder)\r\n            .use(transformShadow)\r\n            .use(transformColor)\r\n            .use(transformUnit)\r\n            .use(transformAttr);\r\n    }\r\n    use(middleware) {\r\n        if (typeof middleware !== 'function') {\r\n            throw \"middleware must be a function\";\r\n        }\r\n        this.middlewares.push(middleware);\r\n        return this;\r\n    }\r\n    transformStyle(style = {}, view) {\r\n        let tempStyle = style;\r\n        this.middlewares.forEach(middleware => {\r\n            let result = middleware(tempStyle, view);\r\n            tempStyle = result ? result : tempStyle;\r\n        });\r\n        return tempStyle;\r\n    }\r\n}\r\nclass StyleDynamicTransformer {\r\n    constructor() {\r\n        this.middlewares = [];\r\n        this.registerMiddleware();\r\n    }\r\n    registerMiddleware() {\r\n        this\r\n            .use(dynamicTransformAdapter);\r\n    }\r\n    use(middleware) {\r\n        if (typeof middleware !== 'function') {\r\n            throw \"middleware must be a function\";\r\n        }\r\n        this.middlewares.push(middleware);\r\n        return this;\r\n    }\r\n    transformStyle(style = {}, view) {\r\n        let tempStyle = style;\r\n        this.middlewares.forEach(middleware => {\r\n            let result = middleware(tempStyle, view);\r\n            tempStyle = result ? result : tempStyle;\r\n        });\r\n        return tempStyle;\r\n    }\r\n}\r\nconst styleTransformer = new StyleTransformer();\r\nconst styleDynamicTransformer = new StyleDynamicTransformer();\n\nconst isNativeTagReg = /^ex-/;\r\nconst NativeTags = \"view,text,image,input,textarea,button,scroller,switch,refresh,loadmore,list,viewpager\";\r\nconst isNativeTags = makeMap(NativeTags);\r\nconst isCustomNativeTag = (tag) => {\r\n    return isNativeTagReg.test(tag);\r\n};\n\nconst extend = Object.assign;\n\nexports.ELEMNT_TAG_MAP = ELEMNT_TAG_MAP;\nexports.NODE_ANCHOR = NODE_ANCHOR;\nexports.NODE_ANIMATION_VIEW = NODE_ANIMATION_VIEW;\nexports.NODE_BUTTON = NODE_BUTTON;\nexports.NODE_COMMENT = NODE_COMMENT;\nexports.NODE_DIALOG = NODE_DIALOG;\nexports.NODE_IMAGE = NODE_IMAGE;\nexports.NODE_INPUT = NODE_INPUT;\nexports.NODE_LIST = NODE_LIST;\nexports.NODE_LOADMORE = NODE_LOADMORE;\nexports.NODE_REFRESH = NODE_REFRESH;\nexports.NODE_SCROLLER = NODE_SCROLLER;\nexports.NODE_SWITCH = NODE_SWITCH;\nexports.NODE_TEXT = NODE_TEXT;\nexports.NODE_TEXTAREA = NODE_TEXTAREA;\nexports.NODE_VIEW = NODE_VIEW;\nexports.NODE_VIEW_PAGER = NODE_VIEW_PAGER;\nexports.NativeTags = NativeTags;\nexports.extend = extend;\nexports.getColor = getColor;\nexports.getEnvironmentInfo = getEnvironmentInfo;\nexports.isCustomNativeTag = isCustomNativeTag;\nexports.isNativeTags = isNativeTags;\nexports.makeMap = makeMap;\nexports.makeMapByArr = makeMapByArr;\nexports.parseStringStyle = parseStringStyle;\nexports.styleDynamicTransformer = styleDynamicTransformer;\nexports.styleTransformer = styleTransformer;\nexports.transformUnitValue = transformUnitValue;\nexports.traverseArr = traverseArr;\n//# sourceMappingURL=tenon-utils.cjs.js.map\n","import {Base} from '../nodes';\n\nexport interface FixedNode {\n  id: number,\n  parents: null | Set<number>\n}\n\n// 为了便于根据 __view_id 查询对应的节点，空间换时间。为 Fixed 元素的收集服务。\nexport const ViewCache:Map<number, Base> = new Map(); \n\nexport const FixedViewCache:Map<number,FixedNode> = new Map<number,FixedNode>();\n\nexport const setCacheNode = (node:Base) => {\n  ViewCache.set(node.__view_id, node);\n}\n\nexport const deleteCacheNode = (node:Base) => {\n  ViewCache.delete(node.__view_id);\n}\n\nexport const handleFixedNodeByStyle = (node:Base, newStyle:Record<string, string>):Boolean =>{\n  let oldPosition = node.style.position;\n  let newPosition = newStyle.position;\n  if(newPosition === 'fixed'){\n    registerFixedNode(node)\n    return true\n  }\n  if(oldPosition === 'fixed' && newPosition !== 'fixed'){\n    unRegisterFixedNode(node)\n    return false\n  }\n  return false\n}\n\nexport const registerFixedNode = (node:Base) => {\n  let fixedNode = {\n    id: node.__view_id,\n    parents: node.parent? getParentIds(node.__view_id): null \n  }\n  FixedViewCache.set(node.__view_id, fixedNode)\n}\n\nexport const unRegisterFixedNode = (node:Base) => {\n  let {__view_id:id} = node\n  FixedViewCache.delete(id)\n}\n\nexport const updateFixedNodeParents = () => {\n  FixedViewCache.forEach((fixedNode: FixedNode) => {\n    let {id} = fixedNode\n    if(fixedNode.parents === null){\n      fixedNode.parents = getParentIds(id)\n    }\n  })\n}\nexport const removeChildWithFixed = (node:Base) => {\n  let {__view_id} = node\n  FixedViewCache.forEach((fixedNode: FixedNode) => {\n    let {id, parents} = fixedNode\n    if(fixedNode.parents === null){\n      parents = fixedNode.parents = getParentIds(id)\n    }\n    if(parents && parents.has(__view_id)){\n      deleteNodeByViewId(id)\n    }\n    if(id === __view_id){\n      FixedViewCache.delete(id)\n    }\n  })\n  deleteCacheNode(node);\n}\n\n/**\n * 获取节点的所有Parents\n * @param node \n */\nfunction getParentIds(id:number):Set<number>{\n  let ids = new Set<number>();\n  let node = ViewCache.get(id);\n  while(node){\n    if(node.parent){\n      ids.add(node.parent.__view_id)\n    }\n    node = node.parent\n  }\n  return ids\n}\n\n/**\n * 根据 ViewId 删除节点\n * @param id ViewId\n */\nfunction deleteNodeByViewId(id: number){\n  let node = ViewCache.get(id);\n  if(node && node.parent){\n    node.parent._removeChild(node);\n  }\n  FixedViewCache.delete(id);\n}","import {transformUnitValue, getColor} from '@hummer/tenon-utils'\nlet animationId = 0;\nexport enum EasingType{\n  LINEAR = 'linear',\n  EASE = 'ease',\n  EASE_IN = 'ease-in',\n  EASE_OUT = 'ease-out',\n  EASE_IN_OUT = 'ease-in-out'\n}\nexport enum AnimationStyle {\n  POSITION = 'position',\n  SCALE = 'scale',\n  SCALEX = 'scaleX',\n  SCALEY = 'scaleY',\n  ROTATIONX = 'rotationX',\n  ROTATIONY = 'rotationY',\n  ROTATIONZ = 'rotationZ',\n  OPACITY = 'opacity',\n  BACKGROUND_COLOR = 'backgroundColor',\n  WIDTH = 'width',\n  HEIGHT = 'height'\n\n}\n\nexport type Animation =  KeyframeAnimation | BasicAnimation | StepAnimation\nexport interface BasicAnimation {\n  id: string|number,\n  styles: Record<string,string|number>,\n  duration: number,\n  delay: number,\n  repeatCount: number,\n  easing:EasingType,\n  onStart?: Function,\n  onEnd?: Function\n}\n\nexport interface KeyFrame{\n  percent: number,\n  styles: Record<string,string|number>,\n}\n\nexport interface KeyframeAnimation{\n  id: string|number,\n  keyframes: Array<KeyFrame>\n  duration: number,\n  delay: number,\n  repeatCount: number,\n  easing: EasingType\n  onStart: Function,\n  onEnd: Function\n}\n\nexport interface StepAnimation{\n  id: string|number,\n  steps: Array<BasicAnimation>,\n  onStart?: Function,\n  onEnd?: Function,\n}\n\n\n/**\n * 帧动画处理\n * @param element Hummer Element\n * @param animation 动画对象\n */\nexport function handleKeyframeAnimation(node:any, animation: KeyframeAnimation){\n  let {id, onEnd, onStart, keyframes, repeatCount = 1, duration, delay, easing = 'linear'} = animation;\n  let {element} = node\n  let styles = keyframes[0].styles\n  styles = transformStyle(styles);\n  let len = Object.keys(styles).length;\n  if(!id){\n    id = animationId++;\n  }\n  // 获取需要添加动画的样式\n  Object.keys(styles).forEach((key, index) => {\n    const ani = new __GLOBAL__.KeyframeAnimation(key);\n    let tempKeyframes: any = []\n    keyframes.forEach(keyframe => {\n      let transformedStyles = transformStyle(keyframe.styles)\n      if (transformedStyles[key] !== undefined) {\n        tempKeyframes.push({\n          percent: keyframe.percent,\n          value: transformedStyles[key]\n        })\n      }\n    });\n    ani.keyframes = tempKeyframes\n    easing && (ani.easing = easing);\n    duration && (ani.duration = handleDuration(duration));\n    delay && (ani.delay = handleDelay(delay));\n    repeatCount && (ani.repeatCount = repeatCount);\n    if(index === 0){\n      onStart && ani.on(\"start\", () => {\n        onStart && onStart();\n      });\n    }\n    onEnd && ani.on(\"end\", () => {\n      if(--len <= 0){\n        onEnd && onEnd();\n      }\n    });\n    element.addAnimation(ani, id + \"_\" +key);\n  })\n}\n\n/**\n * 基础动画处理\n * @param element Hummer Element\n * @param animation 动画对象\n */\nexport function handleBasicAnimation(node:any, animation: BasicAnimation){\n  let {styles, id, duration, delay, repeatCount, easing, onStart, onEnd} = animation\n  let {element} = node\n  styles = transformStyle(styles);\n  if(!id){\n    id = animationId++;\n  }\n  let len = Object.keys(styles).length;\n  Object.keys(styles).forEach((key,index) => {\n    const ani = new __GLOBAL__.BasicAnimation(key);\n    ani.value = styles[key];\n    easing && (ani.easing = easing);\n    !isNaN(duration) && (ani.duration = handleDuration(duration));\n    !isNaN(delay) && (ani.delay = handleDelay(delay));\n    !isNaN(repeatCount) && (ani.repeatCount = repeatCount);\n    // 多个样式，只针对第一个样式的动画，添加事件\n    if(index === 0){\n      onStart && ani.on(\"start\", () => {\n        onStart && onStart();\n      });\n    }\n    onEnd && ani.on(\"end\", () => {\n      if(--len <= 0){\n        onEnd && onEnd();\n      }\n    });\n\n    element.addAnimation(ani, id + \"_\" +key);\n  })\n}\n\n\n/**\n * Step帧动画处理\n * @param element Hummer Element\n * @param animation 动画对象\n */\nexport function handleStepAnimation(node:any, animation: StepAnimation){\n  let {id, onEnd, onStart, steps} = animation;\n  let current = Promise.resolve();\n  steps && steps.forEach((step,index) => {\n    let _onStart:Function\n    let _onEnd:Function\n    current = current.then(() => {\n      return new Promise((resolve) => {\n        if(index === 0){\n          // 第一帧\n          _onStart = () => {\n            step.onStart && step.onStart()\n            onStart && onStart()\n          }\n        }\n        if(index === steps.length - 1){\n          // 最后一帧\n          _onEnd = ()=> {\n            step.onEnd && step.onEnd()\n            onEnd && onEnd()\n          }\n        }else {\n          _onEnd = () => {\n            step.onEnd && step.onEnd()\n            resolve()\n          }\n        }\n        handleBasicAnimation(node, {\n          ...step,\n          id: id + \"_\" + index,\n          onStart: _onStart,\n          onEnd: _onEnd\n        })\n      })\n    })\n  })\n}\n\n/**\n * Animation专用的样式转换\n */\nfunction transformStyle(styles:any){\n  Object.keys(styles).forEach(key => {\n    switch(key){\n      case AnimationStyle.POSITION:\n        let position = styles[key]\n        styles[key] = {\n          x: transformUnitValue(position.x),\n          y: transformUnitValue(position.y)\n        }\n        break;\n      case AnimationStyle.BACKGROUND_COLOR:\n        styles[key] = getColor(styles[key])\n        break;\n      case AnimationStyle.WIDTH:\n        styles[key] = transformUnitValue(styles[key])\n        break;\n      case AnimationStyle.HEIGHT:\n        styles[key] = transformUnitValue(styles[key])\n        break;\n      default:\n        break;\n    }\n  })\n  return styles\n}\n/**\n * 对外Duration单位ms，转换为Hummer的s\n */\nfunction handleDuration(duration:number){\n  return duration / 1000\n}\n\n/**\n * 对外Delay单位ms，转换为Hummer的s\n */\nfunction handleDelay(delay:number){\n  return delay / 1000\n}\n\nexport const handleAnimation = (context:any, animation:Animation) =>{\n  if((animation as KeyframeAnimation).keyframes){\n    handleKeyframeAnimation(context, animation as KeyframeAnimation)\n  }\n  if((animation as BasicAnimation).styles){\n    handleBasicAnimation(context, animation as BasicAnimation)\n  }\n  if((animation as StepAnimation).steps){\n    handleStepAnimation(context, animation as StepAnimation)\n  }\n}\n","import {Image as ImageComponent} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_IMAGE} from '@hummer/tenon-utils'\n\nenum ImageAttr{\n  Src = 'src',\n  GifCount = 'gifRepeatCount'\n}\nconst gifReg = /\\.gif$/\nexport class Image extends Base{\n  __NAME = NODE_IMAGE\n  private _src:string = ''\n  constructor(){\n    super()\n    this.element = new ImageComponent()\n    // Image标签默认是按照Image组件的宽高缩放图片\n    this._defaultStyle = {\n      resize: 'stretch'\n    }\n  }\n\n  set src(value: string){\n    if(gifReg.test(value)){\n      this.element.gifSrc = value\n    }else {\n      this.element.src = value\n    }\n    this._src = value\n  }\n\n   _setAttribute(key:string, value: any){\n    switch(key){\n      case ImageAttr.Src:\n        this.src = value\n        break;\n      case ImageAttr.GifCount:\n        this.element.gifRepeatCount = Number(value)\n        this.src = this._src\n        break;\n      default:\n        break;\n    }\n  }\n}","import {styleDynamicTransformer} from '@hummer/tenon-utils'\nimport {setCacheNode,handleFixedNodeByStyle,removeChildWithFixed} from '../helper/fixed-helper'\nimport {handleAnimation, Animation} from '../helper/animation-helper'\nlet __view_id = 0;\nexport class Base {\n  public _scopedId:string|null = null\n  public __NAME: Symbol|null = null;\n  public element: any = null;\n  public dataset:  any = {};\n  protected children = new Set<Base>();\n  public parent?: Base = undefined;\n  public firstChild: Base | null = null;\n  public lastChild: Base | null = null;\n  public prevSibling: Base | null = null;\n  public nextSibling: Base | null = null;\n  private props =  new Map<any, any>();\n  public  __view_id:number = 0;\n  protected _defaultStyle: Record<string, string>| null = {};\n  protected _style: Record<string, string>| null = {};\n  private _baseStyle: Record<string, string>| null = {};\n\n  constructor() {\n    this.__view_id = __view_id++\n    setCacheNode(this)\n  }\n  // 是否响应交互\n  // Hummer组件Enabled true可响应交互\n  get disabled(){\n    return !this.element.enabled\n  }\n  set disabled(disabled:Boolean){\n    this.element.enabled = !disabled \n  }\n\n  get style(){\n    return this._style || {}\n  }\n  get className(){\n    return this.props.get('class')\n  }\n  set style(value){\n    this.setStyle(value, true)\n  }\n\n  public setScopeId(id:string){\n    // Scoped Id 只创建一次，避免 Slot 重复赋值，导致 scoped Id 错乱的问题\n    if(!this._scopedId){\n      this._scopedId = id\n      this.updateStyle()\n    }\n  }\n\n  public updateStyle(){\n    if(!this._scopedId) return\n    let CSSOM : any,\n        elementStyle = {}\n    if(!(CSSOM = (<any>__GLOBAL__).CSSOM)) return\n    const className = this.getAttribute('class') || ''\n    const scopedRuleSet = CSSOM.hasOwnProperty(this._scopedId) ? CSSOM[this._scopedId].classMap : new Map()\n    const classList = className.split(/\\s/)\n    \n    classList.forEach((item: any) => {\n      if(item){\n        let globalStyleArr = CSSOM['global'].classMap.get(item) || []\n        globalStyleArr = globalStyleArr.map((item : any) => item?.style)\n        let scopeStylesArr = scopedRuleSet.get(item) || []\n        scopeStylesArr = scopeStylesArr.map((item : any) => item?.style)\n        // 将元素总样式、全局变量、scoped变量按照顺序合并\n        elementStyle = Object.assign({}, elementStyle, ...globalStyleArr, ...scopeStylesArr)\n      }\n    })\n    if(Object.keys(elementStyle).length > 0){\n      this.setStyle(elementStyle)\n    }\n  }\n\n  // Mounted 生命周期\n  private _onMounted(){\n    this.onMounted();\n  }\n\n  protected onMounted(){\n\n  }\n\n  // Destoryed 生命周期\n  private _onDestoryed(){\n    removeChildWithFixed(this);\n    this.onDestoryed();\n  }\n\n  protected onDestoryed(){}\n\n  _appendChild(child: Base) {\n    child.unlinkSiblings();\n    child.parent = this;\n    this.children.add(child);\n\n    if (!this.firstChild) {\n      this.firstChild = child;\n    }\n    child.prevSibling = this.lastChild;\n    child.nextSibling = null;\n    if (this.lastChild) {\n      this.lastChild.nextSibling = child;\n    }\n    this.lastChild = child;\n    if(this.element && child.element){\n      this.element.appendChild(child.element)\n    }\n    child._onMounted()\n  }\n\n  private unlinkSiblings() {\n    if (this.parent && this.parent.firstChild === this) {\n      this.parent.firstChild = this.nextSibling;\n    }\n\n    if (this.parent && this.parent.lastChild === this) {\n      this.parent.lastChild = this.prevSibling;\n    }\n\n    if (this.prevSibling) {\n      this.prevSibling.nextSibling = this.nextSibling;\n    }\n\n    if (this.nextSibling) {\n      this.nextSibling.prevSibling = this.prevSibling;\n    }\n\n    this.prevSibling = null;\n    this.nextSibling = null;\n  }\n\n  _removeChild(child: Base) {\n    child._onDestoryed();\n    child.unlinkSiblings();\n    child.parent = undefined;\n    this.children.delete(child);\n    // 删除元素\n    if(this.element && child.element){\n      this.element.removeChild(child.element)\n    }\n  }\n\n  _insertBefore(child: Base, anchor: Base) {\n    child.unlinkSiblings();\n    child.parent = this;\n    if (anchor.prevSibling) {\n      child.prevSibling = anchor.prevSibling;\n      anchor.prevSibling.nextSibling = child;\n    }\n    anchor.prevSibling = child;\n    child.nextSibling = anchor;\n\n    if (this.firstChild === anchor) {\n      this.firstChild = child;\n    }\n    this.children.add(child);\n    // 插入元素\n    if(this.element && child.element && anchor.element){\n      this.element.insertBefore(child.element, anchor.element)\n      child._onMounted();\n    }\n  }\n\n  setElementText(text: string) {\n    // TODO 抛出异常\n    console.warn('非text元素不支持')\n  }\n\n  /**\n   * 设定元素样式，进行聚合\n   * @param style \n   * @param flag 是否来自 style 属性\n   */\n  setStyle(style: any, flag: boolean = false) {\n    let tempStyle = this.hackForStyle(style, this)\n    flag && (this._baseStyle = tempStyle);\n    let newStyle = {\n      ...this._defaultStyle,\n      ...tempStyle,\n      ...this._baseStyle\n    };\n    handleFixedNodeByStyle(this, newStyle);\n    this.element.style = this._style = newStyle;\n  }\n\n  protected hackForStyle(style: any, base:Base){\n    return styleDynamicTransformer.transformStyle(style, base)\n  }\n  /**\n   * 设定属性\n   * @param key 属性名\n   * @param value 属性值\n   */\n  setAttribute(key:string, value: any){\n    key.search(/^data-/) === 0 && key.split('data-')[1] && (this.dataset[key.split('data-')[1]] = value);\n    this.props.set(key, value)\n\n    switch(key){\n      case 'disabled':\n        this.disabled = value\n        break;\n      case 'class': \n        this.updateStyle()\n        break;\n      default:\n        // FIX: 修复Viewpager组件Data属性赋值问题\n        // this.element[key] = value\n        this._setAttribute(key, value)\n        break;\n    }\n  }\n\n  /**\n   * 允许自定义组件覆盖\n   * @param key \n   * @param value \n   */\n  protected _setAttribute(key:string, value: any){\n\n  }\n\n  /**\n   * 获取属性名\n   * @param key 属性名\n   */\n  getAttribute(key:string){\n    switch(key){\n      case 'disabled':\n        return this.disabled\n      default:\n        return this.props.get(key)\n    }\n  }\n\n  handleAnimation(animation: Animation){\n    handleAnimation(this, animation)\n  }\n  addEventListener(event: string, func:Function){\n    this.element.addEventListener(event, (e:any) => {\n      // iOS 中 event 无法被重新赋值，不要进行 event 的深拷贝\n      e.target = {\n        dataset: this.dataset\n      }\n      func.call(this, e)\n    })\n  }\n  removeEventListener(event: string, func?:Function){\n    this.element.removeEventListener(event, func)\n  }\n\n  getRect(func:Function) {\n    this.element.getRect((rect: object) => {\n      func.call(this, rect)\n    })\n  }\n}","import {View as ViewComponent, Scroller as ScrollViewComponent, Hummer} from '@hummer/hummer-front'\nimport {Base} from '../Base'\n\nconst noFunc =  () => {}\nexport interface PageOptions{\n  onLoad\t?:Function,\n  onShow?: Function,\n  onHide?: Function,\n  onUnload?: Function,\n  onBack?: Function,\n  canScroll?: Boolean,  // 是否可滚动\n  pageStyle?: Record<string, string> // 页面样式\n}\n// TODO 后期接入真实的Page实例\nexport class RootViewComponent extends ViewComponent{\n  public _onCreate: Function\n  public _onAppear: Function\n  public _onDisappear: Function\n  public _onDestroy: Function\n  public _onBack: Function\n  private _element: ScrollViewComponent|null = null\n  private _canScroll: Boolean = true\n  constructor(options:PageOptions = {}){\n    super();\n    let {onLoad, onShow, onHide, onUnload, onBack, canScroll = true, pageStyle = {}} = options\n    this._onCreate = onLoad || noFunc\n    this._onAppear = onShow || noFunc\n    this._onDisappear = onHide || noFunc\n    this._onDestroy = onUnload || noFunc\n    this._onBack = onBack || noFunc\n    this._canScroll = canScroll\n    this.style = {\n      ...pageStyle,\n      width: '100%',\n      height: '100%'\n    }\n    if( this._canScroll){\n      this._element = new ScrollViewComponent()\n      this._element.style = {\n        width: \"100%\",\n        height: \"100%\",\n      }\n      this.appendChild(this._element)\n    }\n  }\n\n  get element(){\n    return this._canScroll && this._element ? this._element : this\n  }\n  onCreate(){\n    // 页面创建\n    this._onCreate()\n  }\n\n  onAppear(){\n    // 页面显示周期\n    this._onAppear()\n  }\n\n  onDisappear(){\n    // 页面隐藏\n    this._onDisappear()\n  }\n\n  onDestroy(){\n    // 页面销毁\n    this._onDestroy()\n  }\n\n  onBack(): boolean{\n    // 页面销毁\n    let result = this._onBack()\n    return result || false\n  }\n}\n\n\nexport class Page extends Base{\n  private _rootView:RootViewComponent\n  constructor(options: PageOptions){\n    super()\n    this._rootView = new RootViewComponent(options)\n    this.element = this._rootView.element\n  }\n  render(){\n    Hummer.render(this._rootView)\n  }\n\n  set onLoad(load:Function){\n    this._rootView._onCreate = load\n  }\n\n  set onShow(show:Function){\n    this._rootView._onAppear = show\n  }\n \n  set onHide(hide:Function){\n    this._rootView._onDisappear = hide\n  }\n \n  set onUnload(destroy:Function){\n    this._rootView._onDestroy = destroy\n  }\n \n  set onBack(back:Function){\n    this._rootView._onBack = back\n  }\n}","import {View as ViewComponent} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_VIEW} from '@hummer/tenon-utils'\n\nexport class View extends Base{\n  __NAME = NODE_VIEW\n\n  constructor(isView:boolean = true){\n    super();\n    if(!isView){\n      return\n    }\n    this.element = new ViewComponent();\n  }\n}\n","import {Text as TextComponent} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_TEXT} from '@hummer/tenon-utils'\nexport class Text extends Base{\n  __NAME = NODE_TEXT\n  private _text:string = ''\n  constructor(){\n    super()\n    this.element = new TextComponent()\n  }\n\n  // FIXME: 去除 Hack SetElementText方法，直接操作属性即可\n  setElementText(text:string){\n    this._text = text\n    this.element.text = text\n  }\n\n  // 文案\n  get text(){\n    return this._text\n  }\n  set text(text:string){\n    this._text = text\n    this.element.text = text\n  }\n\n  set richText(value: Array<String>){\n    this.element.richText = value\n  }\n\n  _setAttribute(key:string, value: any){\n    switch(key){\n      case 'rich-text':\n        this.richText = value\n        break;\n      default:\n        break;\n    }\n  }\n}","import {Input as InputComponent} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_INPUT} from '@hummer/tenon-utils'\n\nexport  class Input extends Base{\n  __NAME = NODE_INPUT\n  private _input: Function|null = null\n  private _change: Function|null = null\n  private _focus: Function|null = null\n  private _blur: Function|null = null\n  private _confirm: Function|null = null\n  private _hasInput: Boolean = false\n  constructor(){\n    super()\n    this.element = new InputComponent()\n  }\n\n  // 当前元素值\n  get value():(string| number){\n    return this.element.text || ''\n  }\n  set value(value: string | number){\n    this.element.text = value\n  }\n\n  // 是否处于激活状态\n  get focused(){\n    return this.element.focused || false\n  }\n  set focused(value:Boolean){\n    let flag = value\n    if(typeof value === 'string'){\n      if(value === 'true'){\n        flag = true\n      }else if(value === 'false'){\n        flag = false\n      }\n    }\n    this.element.focused = flag\n  }\n\n  // 占位提示文本\n  get placeholder(){\n    return this.element.placeholder || ''\n  }\n  set placeholder(text:string){\n    this.element.placeholder = text\n  }\n\n  set type(value:string){\n    this.element.style = {\n      type:value\n    }\n  }\n\n  set returnKeyType(value:string){\n    this.element.style = {\n      returnKeyType:value\n    }\n  }\n\n  set maxLength(value:string){\n    this.element.style = {\n      maxLength:value\n    }\n  }\n\n  _setAttribute(key:string, value: any){\n    switch(key){\n      case 'value':\n        this.value = value\n        break;\n      case 'placeholder':\n        this.placeholder = value\n        break;\n      case 'focused':\n        this.focused = value\n        break;\n      case 'type':\n        this.type = value\n        break;\n      case 'max-length':\n        this.maxLength = value\n        break;\n      case 'return-key-type':\n        this.returnKeyType = value\n        break;\n      default:\n        break;\n    }\n  }\n\n  addEventListener(event: string, func:Function){\n    var handler = (text:string) => {\n      func.call(this, text)\n    }\n    switch(event){\n      case 'input':\n        this._input = handler\n        break;\n      case 'change':\n        this._change = handler\n        break;\n      case 'focus':\n        this._focus = handler\n        break;\n      case 'blur':\n        this._blur = handler\n        break;\n      case 'confirm':\n        this._confirm = handler\n        break;\n      default:\n        break;\n    }\n    this.initListener()\n  }\n  removeEventListener(event: string){\n    switch(event){\n      case 'input':\n        this._input = null\n        this._hasInput = false\n        break;\n      case 'change':\n        this._change = null\n        break;\n      case 'focus':\n        this._focus = null\n        break;\n      case 'blur':\n        this._blur = null\n        break;\n      case 'confirm':\n        this._confirm = null\n        break;\n      default:\n        break;\n    }\n  }\n\n  private initListener(){\n    if(this._hasInput){\n      return;\n    }\n    this.element.addEventListener('input', (event:any) => {\n      let {state, text} = event\n      switch(state){\n        case 1:\n          this._focus && this._focus(text)\n          break;\n        case 2:\n          this._change && this._change(text)\n          break;\n        case 3:\n          this._blur && this._blur(text)\n          break;\n        case 4:\n          this._confirm && this._confirm(text)\n          break; \n        default:\n          break; \n      }\n      this._input && this._input({value: text, text: text, state})\n    })\n    this._hasInput = true\n  }\n}","import {TextArea as TextAreaComponent} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_TEXTAREA} from '@hummer/tenon-utils'\nexport class TextArea extends Base{\n  __NAME = NODE_TEXTAREA\n  private _input: Function|null = null\n  private _change: Function|null = null\n  private _focus: Function|null = null\n  private _blur: Function|null = null\n  private _confirm: Function|null = null\n  private _hasInput: Boolean = false\n  constructor(){\n    super()\n    this.element = new TextAreaComponent()\n  }\n\n  // 当前元素值\n  get value():(string| number){\n    return this.element.text || ''\n  }\n  set value(value: string | number){\n    this.element.text = value\n  }\n\n  // 是否处于激活状态\n  get focused(){\n    return this.element.focused || false\n  }\n  set focused(value:Boolean){\n    let flag = value\n    if(typeof value === 'string'){\n      if(value === 'true'){\n        flag = true\n      }else if(value === 'false'){\n        flag = false\n      }\n    }\n    this.element.focused = flag\n  }\n\n  // 占位提示文本\n  get placeholder(){\n    return this.element.placeholder || ''\n  }\n  set placeholder(text:string){\n    this.element.placeholder = text\n  }\n\n  set type(value:string){\n    this.element.style = {\n      type:value\n    }\n  }\n\n  set returnKeyType(value:string){\n    this.element.style = {\n      returnKeyType:value\n    }\n  }\n\n  set maxLength(value:string){\n    this.element.style = {\n      maxLength:value\n    }\n  }\n\n  set rows(value:number){\n    this.element.style = {\n      textLineClamp: value\n    }\n  }\n\n  _setAttribute(key:string, value: any){\n    switch(key){\n      case 'value':\n        this.value = value\n        break;\n      case 'placeholder':\n        this.placeholder = value\n        break;\n      case 'focused':\n        this.focused = value\n        break;\n      case 'type':\n        this.type = value\n        break;\n      case 'max-length':\n        this.maxLength = value\n        break;\n      case 'return-key-type':\n        this.returnKeyType = value\n        break;\n      case 'rows':\n        this.rows = value\n        break;\n      default:\n        break;\n    }\n  }\n\n  addEventListener(event: string, func:Function){\n    var handler = (text:string) => {\n      func.call(this, text)\n    }\n    switch(event){\n      case 'input':\n        this._input = handler\n        break;\n      case 'change':\n        this._change = handler\n        break;\n      case 'focus':\n        this._focus = handler\n        break;\n      case 'blur':\n        this._blur = handler\n        break;\n      case 'confirm':\n        this._confirm = handler\n        break;\n      default:\n        break;\n    }\n    this.initListener()\n  }\n  removeEventListener(event: string){\n    switch(event){\n      case 'input':\n        this._input = null\n        this._hasInput = false\n        break;\n      case 'change':\n        this._change = null\n        break;\n      case 'focus':\n        this._focus = null\n        break;\n      case 'blur':\n        this._blur = null\n        break;\n      case 'confirm':\n        this._confirm = null\n        break;\n      default:\n        break;\n    }\n  }\n\n  private initListener(){\n    if(this._hasInput){\n      return;\n    }\n    this.element.addEventListener('input', (event:any) => {\n      let {state, text} = event\n      switch(state){\n        case 1:\n          this._focus && this._focus(text)\n          break;\n        case 2:\n          this._change && this._change(text)\n          break;\n        case 3:\n          this._blur && this._blur(text)\n          break;\n        case 4:\n          this._confirm && this._confirm(text)\n          break; \n        default:\n          break; \n      }\n      this._input && this._input({value: text, state})\n    })\n    this._hasInput = true\n  }\n}","import {Button as ButtonComponent} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_BUTTON, styleTransformer} from '@hummer/tenon-utils'\n\nexport class Button extends Base{\n  __NAME = NODE_BUTTON\n  private _text: string = ''\n  constructor(){\n    super()\n    this.element = new ButtonComponent()\n  }\n  setElementText(text: string){\n    this.text = text\n  }\n\n  // 按钮文案\n  get text(){\n    return this._text\n  }\n  set text(text:string){\n    this._text = text\n    this.element.text = text\n  }\n\n  set pressedStyle(style: Record<string, string>){\n    this.element.pressed = styleTransformer.transformStyle(style, this) || {}\n  }\n\n  set disabledStyle(style: Record<string, string>){\n    this.element.disabled = styleTransformer.transformStyle(style, this) || {}\n  }\n\n\n  /**\n   * 重写父类属性\n   */\n  _setAttribute(key:string, value: any){\n    switch(key){\n      case 'disabled':\n        this.disabled = value\n        break;\n      case 'disabled-style':\n        this.disabledStyle = value\n        break;\n      case 'pressed-style':\n        this.pressedStyle = value\n        break;\n      default:\n        break;\n    }\n  }\n}","import {Base} from '../Base'\nimport {NODE_COMMENT} from '@hummer/tenon-utils'\nimport {View as ViewComponent} from '@hummer/hummer-front'\n\n// 注释节点，使用Hummer侧View对象进行封装\nexport class Comment extends Base{\n  __NAME = NODE_COMMENT\n  private _comment:string = ''\n  constructor(comment:string){\n    super()\n    this.element = new ViewComponent()\n    this.element.style = {\n      display: 'none'\n    }\n    this._comment = comment\n  }\n\n  get comment(){\n    return this._comment\n  }\n}","import {Scroller as ScrollerComponent, HorizontalScroller} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_VIEW, NODE_REFRESH, NODE_LOADMORE} from '@hummer/tenon-utils'\n\n// 增加事件\nexport class Scroller extends Base{\n  __NAME = NODE_VIEW\n\n  constructor(){\n    super();\n    this.element = new ScrollerComponent();\n  }\n  _setAttribute(key:string, value: any){\n    switch(key){\n      case 'disabled':\n        this.disabled = value\n        break;\n      case 'scroll-direction':\n        if(value === 'horizontal' &&  this.element instanceof ScrollerComponent){\n          // 属性切换时，滚动插件需要重新生命；同时元素渲染从children一次向上，这个时候element children已经赋值\n          let scroller = new HorizontalScroller() as any\n          scroller.style = this._style\n          for(let child of this.children.values()){\n            this.element.removeChild(child.element)\n            scroller.appendChild(child.element)\n          }\n          this.element = scroller\n        }\n      break;\n      default:\n        // showScrollBar\n        this.element.style = {\n          [key]:value\n        }\n        break;\n    }\n  }\n\n  _appendChild(child: any) {\n    child.unlinkSiblings();\n    child.parent = this;\n    this.children.add(child);\n\n    if (!this.firstChild) {\n      this.firstChild = child;\n    }\n    child.prevSibling = this.lastChild;\n    child.nextSibling = null;\n    if (this.lastChild) {\n      this.lastChild.nextSibling = child;\n    }\n    this.lastChild = child;\n    // 新增元素\n    if(this.element && child.element){\n      // 拦截refresh 和 loadmore 留作他用 其他正常渲染\n      if(child.__NAME === NODE_REFRESH){\n        this.element.refreshView = child.element\n      }else if(child.__NAME === NODE_LOADMORE){\n        this.element.loadMoreView = child.element\n      }else {\n        this.element.appendChild(child.element);\n        child._onMounted();\n        child.onMounted();\n      }\n    }\n  }\n\n  _insertBefore(child:any, anchor:any) {\n    child.unlinkSiblings();\n    child.parent = this;\n    if (anchor.prevSibling) {\n      child.prevSibling = anchor.prevSibling;\n      anchor.prevSibling.nextSibling = child;\n    }\n    anchor.prevSibling = child;\n    child.nextSibling = anchor;\n\n    if (this.firstChild === anchor) {\n      this.firstChild = child;\n    }\n    //FIXME: 插入时，children顺序需要进行变更\n    this.children.add(child);\n    // 插入元素\n    if(this.element && child.element && anchor.element){\n      // 拦截refresh 和 loadmore 留作他用 其他正常渲染\n      if(child.__NAME === NODE_REFRESH){\n        this.element.refreshView = child.element\n      }else if(child.__NAME === NODE_LOADMORE){\n        this.element.loadMoreView = child.element\n      }else {\n        this.element.appendChild(child.element);\n        child._onMounted();\n        child.onMounted();\n      }\n    }\n  }\n\n  /**\n   * 滚动到坐标（单位：Px）\n   * @param x 横坐标\n   * @param y 纵坐标\n   */\n  scrollTo(x:number, y:number){\n    this.element.scrollTo(x,y);\n  }\n\n  /**\n   * 滚动一定的距离（单位：Px）\n   * @param dx x偏移量\n   * @param dy y偏移量\n   */\n  scrollBy(dx:number, dy:number){\n    this.element.scrolBy(dx, dy)\n  }\n\n  /**\n   * 滚动到顶部，如果是水平就滚动到最左侧\n   */\n  scrollToTop(){\n    this.element.scrollToTop()\n  }\n\n  /**\n   * 滚动到底部，如果是水平就滚动到最右侧\n   */\n  scrollToBottom(){\n    this.element.scrollToBottom()\n  }\n\n  /**\n   * 结束下拉刷新\n   */\n  stopPullRefresh() {\n    this.element.stopPullRefresh()\n  }\n\n  /**\n   * 结束加载更多\n   */\n  stopLoadMore(enable: boolean) {\n    this.element.stopLoadMore(enable)\n  }\n\n  /**\n   * 重写事件绑定\n   * @param event \n   * @param func \n   */\n  addEventListener(event: string, func:Function){\n    switch(event){\n      case \"scroll\":\n        // event单位 px\n        this.element.addEventListener('scroll', (e:any) => {\n          func.call(this, e)\n        })\n        break;\n      case \"scrolltotop\":\n        this.element.setOnScrollToTopListener(() => {\n          func.call(this)\n        })\n        break;\n      case \"scrolltobottom\":\n        this.element.setOnScrollToBottomListener(() => {\n          func.call(this)\n        })\n        break;\n      case 'refresh':\n        this.element.onRefresh = (state: any) => {\n          func.call(this, state, this)\n        }\n        break;\n      case 'loadmore':\n        this.element.onLoadMore = (state: any) => {\n          func.call(this, state, this)\n        }\n        break;\n      default:\n        this.element.addEventListener(event, (e:any) => {\n          func.call(this, e)\n        })\n        break;\n    }\n  }\n}\n","import {View as ViewComponent} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_ANCHOR} from '@hummer/tenon-utils'\n\nexport class Anchor extends Base{\n  __NAME = NODE_ANCHOR\n\n  constructor(){\n    super();\n    this.element = new ViewComponent();\n    this.element.style = {\n      display: \"none\"\n    }\n  }\n}\n","import {Switch as SwitchComponent} from '@hummer/hummer-front'\nimport {Base} from '../Base'\nimport {NODE_SWITCH} from '@hummer/tenon-utils'\n\nexport class Switch extends Base{\n  __NAME = NODE_SWITCH\n  constructor(){\n    super()\n    this.element = new SwitchComponent()\n  }\n\n  get value():(Boolean){\n    return this.element.checked\n  }\n  set value(value: Boolean){\n    this.element.checked = value\n  }\n\n  set onColor(value: string){\n    this.element.style = {\n      onColor:value\n    }\n  }\n  set offColor(value: string){\n    this.element.style = {\n      offColor:value\n    }\n  }\n  set thumbColor(value: string){\n    this.element.style = {\n      thumbColor:value\n    }\n  }\n\n  _setAttribute(key:string, value: any){\n    switch(key){\n      case 'value':\n        this.value = value\n        break;\n      case 'open-color':\n        this.onColor = value\n        break;\n      case 'close-color':\n        this.offColor = value\n        break;\n      case 'thumb-color':\n        this.thumbColor = value\n        break;\n      default:\n        break;\n    }\n  }\n\n  addEventListener(event: string, func:Function){\n    if(event === 'switch'){\n      let invoker = (e:any) => {\n        let {state} = e\n        let value = state === 1?true:false\n        func.call(this, value)\n      }\n      this.element.addEventListener(event, invoker)\n    }\n    \n  }\n  removeEventListener(event: string, func?:Function){\n    this.element.removeEventListener(event, func)\n  }\n\n}","import {View} from '../view'\nimport {NODE_REFRESH} from '@hummer/tenon-utils'\n\nexport class Refresh extends View{\n  __NAME = NODE_REFRESH\n}\n","import {View} from '../view'\nimport {NODE_LOADMORE} from '@hummer/tenon-utils'\n\nexport class LoadMore extends View{\n  __NAME = NODE_LOADMORE\n}\n","import {Base} from './Base'\n\nconst components = new Map()\n\nexport interface NativeComponent {\n  name: string,\n  factory: Function\n}\n\nexport function register(component:NativeComponent | Array<NativeComponent>){\n  if(Array.isArray(component)){\n    component.forEach((component:NativeComponent) => {\n      registerComponent(component)\n    })\n  }else {\n    registerComponent(component)\n  }\n}\nfunction registerComponent(component:NativeComponent){\n  let {name} = component\n  components.set(`ex-${name}`, component)\n}\nexport function getComponent(tag: string):Base{\n  let component = components.get(tag)\n  return component.factory()\n}","\nimport {ELEMNT_TAG_MAP,NODE_SWITCH, NODE_VIEW, NODE_TEXT, NODE_IMAGE, NODE_INPUT, NODE_TEXTAREA, NODE_BUTTON, NODE_SCROLLER, NODE_REFRESH, NODE_LOADMORE} from '@hummer/tenon-utils'\nimport {Page, PageOptions} from './components/page'\nimport {View} from './components/view'\nimport {Text} from './components/text'\nimport {Image} from './components/image'\nimport {Input} from './components/input'\nimport {TextArea} from './components/textarea'\nimport {Button} from './components/button'\nimport {Comment} from './components/comment'\nimport { Scroller } from './components/scroller'\nimport {Anchor} from './components/anchor'\nimport { Switch } from './components/switch'\nimport {Refresh} from './components/extend/refresh'\nimport {LoadMore} from './components/extend/loadmore'\n\nimport {Base} from './Base'\nimport {getComponent} from './component'\nimport {isCustomNativeTag} from '@hummer/tenon-utils'\n/**\n * 通用Document对象\n */\nexport class Document{\n  constructor(){}\n\n  createElement(tag:string):(Base | null){\n    let component = null\n    switch(tag){\n      case ELEMNT_TAG_MAP[NODE_VIEW]:\n        component = new View();\n        break;\n      case ELEMNT_TAG_MAP[NODE_SCROLLER]:\n        component = new Scroller();\n        break;\n      case ELEMNT_TAG_MAP[NODE_TEXT]:\n        component = new Text();\n        break;\n      case ELEMNT_TAG_MAP[NODE_IMAGE]:\n        component = new Image();\n        break;\n      case ELEMNT_TAG_MAP[NODE_INPUT]:\n        component = new Input();\n        break;\n      case ELEMNT_TAG_MAP[NODE_TEXTAREA]:\n        component = new TextArea()\n        break;\n      case ELEMNT_TAG_MAP[NODE_BUTTON]:\n        component = new Button();\n        break;\n      case ELEMNT_TAG_MAP[NODE_SWITCH]:\n        component = new Switch();\n        break;\n      case ELEMNT_TAG_MAP[NODE_LOADMORE]:\n        component = new LoadMore();\n        break;\n      case ELEMNT_TAG_MAP[NODE_REFRESH]:\n        component = new Refresh();\n        break;\n      default: \n        if(isCustomNativeTag(tag)){\n          // Custom Native Tag\n          component = getComponent(tag) || new View()\n        }else {\n          // Default\n          component = new View();\n        }\n        break;\n    }\n    return component\n  }\n\n  createText(text: string): Text|Anchor{\n    // Vue中调用该方法实现锚点，做特殊处理\n    let component = null;\n    if(!text){\n      // 创建锚点\n      component = new Anchor();\n    }else{\n      component = new Text();\n      component.setElementText(text);\n    }\n    return component\n  }\n\n  createComment(comment: string){\n    return new Comment(comment)\n  }\n\n  createPageView(options: PageOptions): Page{\n    let pageView = new Page(options)\n    return pageView\n  }\n}\nexport default new Document()","import {Base} from './nodes/Base'\nimport document from './nodes/document'\n\nconst insert = function(child:Base, parent:Base, anchor:Base) {\n  if(!parent){\n    return null\n  }\n  if(anchor !== null){\n    parent._insertBefore(child, anchor)\n  }else{\n    parent._appendChild(child)\n  }\n}\n\nconst remove = function(child:Base){\n  const parent = child.parent as Base;\n  if(parent !== null){\n    parent._removeChild(child);\n  }\n}\n\nconst createElement = function(tag:string){\n  return document.createElement(tag);\n}\n\nconst createText = function(text:string){\n  return document.createText(text);\n}\n\nconst createComment = function(comment:string){\n  return document.createComment(comment);\n}\n\nconst setText = function(node:Base, text: string){\n  node.setElementText(text)\n}\n\nconst setElementText = function(node:Base, text:string){\n  node.setElementText(text)\n}\n\nconst parentNode = function(node:Base){\n  return node.parent ? node.parent: null\n}\n\nconst nextSibling = function(node:Base){\n  return node.nextSibling\n}\n\nconst querySelector = function(selector:string){\n  return null\n}\n\nconst setScopeId = function(el:Base, id:string){\n  el.setScopeId(id)\n}\n\n\nexport const nodeOps = {\n  insert,\n  remove,\n  createElement,\n  createText,\n  createComment,\n  setText,\n  setElementText,\n  parentNode,\n  nextSibling,\n  querySelector,\n  setScopeId\n}\n\n","import { Base } from '../nodes/Base'\nexport function patchClass(\n  el: Base,\n  key: string,\n  prevValue: any,\n  nextValue: any){\n    // 处理Class的绑定\n    el.setAttribute(key, nextValue);\n}\n","import { Base } from '../nodes/Base'\nimport {parseStringStyle, styleTransformer} from '@hummer/tenon-utils'\nexport function patchStyle( \n  el: Base,\n  key: string,\n  prevValue: any,\n  nextValue: any){\n  \n  let style = nextValue\n  if(typeof nextValue === 'string'){\n    style = parseStringStyle(nextValue)\n  }\n  // 样式转换为 Hummer 特有样式\n  style = styleTransformer.transformStyle(style, el);\n\n  el.setStyle(style, true)\n}\n","import { Base } from '../nodes/Base'\n\nexport  function patchAttrs(\n  el: Base,\n  key: string,\n  prevValue: any,\n  nextValue: any){\n  \n  el.setAttribute(key, nextValue);\n}","import { Base } from '../nodes/Base'\nimport {\n  ComponentInternalInstance\n} from '@vue/runtime-core'\n\ninterface Invoker extends EventListener {\n  value: EventValue\n}\ntype EventValue = Function & {\n  invoker?: Invoker | null\n}\n\nexport function patchEvents(\n  el: Base,\n  rawName: string,\n  prevValue: EventValue | null,\n  nextValue: EventValue | null,\n  instance: ComponentInternalInstance | null = null\n){\n  const event = rawName.slice(2).toLowerCase()\n  const value = nextValue\n  const invoker = prevValue && prevValue.invoker\n  if(nextValue && value){\n    if(invoker){\n      (prevValue as EventValue).invoker = null\n      invoker.value = value\n      nextValue.invoker = invoker\n    }else {\n      addEventListener(el, event, createInvoker(value, instance))\n    }\n  }else if(invoker){\n    removeEventListener(el, event, invoker)\n  }\n}\n\nfunction createInvoker(\n  initialValue: EventValue,\n  instance: ComponentInternalInstance | null\n){\n  // TODO: Array.isArray兼容性测试\n  const invoker:Invoker = (...args) => {\n    if(Array.isArray(initialValue)){\n      initialValue.forEach((func:Function) => {\n        func.apply(instance, [...args])\n      })\n    }else {\n      initialValue.apply(instance, [...args])\n    }\n  }\n  invoker.value = initialValue\n  initialValue.invoker = invoker\n  return invoker\n}\n\nexport function addEventListener(el:Base, event: string, handler: EventListener){\n  el.addEventListener(event, handler)\n}\nexport function removeEventListener(el:Base, event: string, handler: EventListener){\n  el.removeEventListener(event, handler)\n}\n","import { Base } from './nodes'\nimport {patchClass} from './handlers/class'\nimport {patchStyle} from './handlers/style'\nimport {patchAttrs} from './handlers/attrs'\nimport {patchEvents} from './handlers/events'\n\nexport function patchProp(\n  el: Base,\n  key: string,\n  prevValue: any,\n  nextValue: any,\n  isSVG = false,\n  prevChildren:any,\n  parentComponent:any,\n  parentSuspense:any,\n  unmountChildren:any\n) {\n  switch(key){\n    case 'class':\n      patchClass(el, key, prevValue, nextValue)\n      break;\n    case 'style':\n      patchStyle(el, key, prevValue, nextValue)\n      break;\n    default:\n      if(isOn(key)){\n        patchEvents(el, key, prevValue, nextValue, parentComponent)\n      }else{\n        patchAttrs(el, key, prevValue, nextValue)\n      }\n      break;\n  }\n}\n\nfunction isOn(key:string){\n  const onRE = /^on[^a-z]/\n  return onRE.test(key)\n}","import {Plugin, ComponentOptions, Directive} from \"@vue/runtime-core\"\ninterface TenonContext{\n  plugins: Array<any>,\n  mixins: Array<any>,\n  components: Array<any>,\n  directives: Array<any>\n}\nexport const context:TenonContext = {\n  plugins: [],\n  mixins: [],\n  components: [],\n  directives: [],\n}\n\n// FIXME:兼容Vue2用法\nexport const use = (plugin: Plugin, options?: any) => {\n  context.plugins.push({\n    plugin: plugin,\n    options: options\n  })\n}\n\n// FIXME:兼容Vue2用法\nexport const mixin = (mixin: ComponentOptions) =>{\n  context.mixins.push({\n    mixin: mixin\n  })\n}\n\n// FIXME:兼容Vue2用法\nexport const component = (name: string, component:any): any => {\n  context.components.push({\n    name: name,\n    component: component\n  })\n}\n\n// FIXME:兼容Vue2用法\nexport const directive = (name: string, directive?: Directive) => {\n  context.directives.push({\n    name: name,\n    directive: directive\n  })\n}\n\nexport const install = (app:any) => {\n  // Install Plugins\n  context.plugins.forEach(item => {\n    app.use(item.plugin, item.options)\n  })\n  // Install Mixins\n  context.mixins.forEach(item => {\n    app.mixin(item.mixin)\n  })\n  // Install Components\n  context.components.forEach(item => {\n    app.component(item.name, item.component)\n  })\n  // Install Directives\n  context.directives.forEach(item => {\n    app.directive(item.name, item.directive)\n  })\n}","interface LifeCycleMixins {\n  onLoad: Array<any>,\n  onShow: Array<any>,\n  onHide: Array<any>,\n  onUnload: Array<any>,\n  onBack: Array<any>\n}\nenum LifeCycleEnum {\n  ONLOAD = 'onLoad',\n  ONSHOW = 'onShow',\n  ONHIDE = 'onHide',\n  ONUNLOAD = 'onUnload',\n  ONBACK = 'onBack'\n}\nconst LIFECYCLE = [LifeCycleEnum.ONLOAD, LifeCycleEnum.ONSHOW, LifeCycleEnum.ONHIDE, LifeCycleEnum.ONUNLOAD, LifeCycleEnum.ONBACK]\n\n/**\n * 初始化页面生命周期\n * @param container 页面实例\n * @param instance 组件实例\n * @param config Options\n */\nexport const initPageLifeCycle = (container: any, instance: any, config: any) => {\n  let { mixins, extends: extendOptions } = config\n  let lifeCycleMixins: any = {\n    onLoad: [],\n    onShow: [],\n    onHide: [],\n    onUnload: [],\n    onBack: []  \n  }\n  if (mixins) {\n    lifeCycleMixins = applyPageMixin(config)\n  }\n  LIFECYCLE.forEach((lifecycle:string) => {\n    container[lifecycle] = () => {\n      extendOptions && applyLifeCycle(instance, extendOptions[lifecycle])\n      lifeCycleMixins[lifecycle].forEach((func: Function) => {\n        applyLifeCycle(instance, func)\n      })\n      applyLifeCycle(instance, config[lifecycle])\n    }\n  })\n}\n\nfunction applyPageMixin(config: any): (LifeCycleMixins | null) {\n  if (!config.mixins || config.mixins.length === 0) {\n    return null\n  }\n  let lifeCycleMixins: LifeCycleMixins = {\n    onLoad: [],\n    onShow: [],\n    onHide: [],\n    onUnload: [],\n    onBack: []\n  }\n  config.mixins.forEach((mixin: any) => {\n    let { onLoad, onShow, onHide, onUnload, onBack } = mixin\n    onLoad && lifeCycleMixins.onLoad.push(onLoad)\n    onShow && lifeCycleMixins.onShow.push(onShow)\n    onHide && lifeCycleMixins.onHide.push(onHide)\n    onUnload && lifeCycleMixins.onUnload.push(onUnload)\n    onBack && lifeCycleMixins.onBack.push(onBack)\n  })\n  return lifeCycleMixins\n}\n\nfunction applyLifeCycle(instance: any, func: Function) {\n  func && func.apply(instance);\n}\n","import {Base} from '../runtime/nodes'\nexport enum InputEventState{\n  BEGIN=1,\n  CHANGED=2,\n  ENDED=3,\n  CONFIRMED=4\n}\n\nexport enum SwitchEventState{\n  CLOSE=0,\n  OPEN=1\n}\nexport interface InputEvent extends EventListener{\n  type: string,\n  state: InputEventState,\n  timestamp: number,\n  text: string\n}\n\nexport interface SwitchEvent extends EventListener{\n  type: string,\n  state: SwitchEventState,\n  timestamp: number\n}\n\nexport interface EventListener {\n  (evt: any): void;\n}\n\nexport function addEventListener(el:Base, event: string, handler: EventListener){\n  el.addEventListener(event, handler)\n}\nexport function removeEventListener(el:Base, event: string, handler: EventListener){\n  el.removeEventListener(event, handler)\n}\n","export enum MatchType{\n  Class,\n  ID,\n  Attr\n}\nexport interface RuleNode {\n  selector: string,\n  relation: string,\n  matchType: MatchType\n}\nexport interface RuleSet{\n  [key: string]: Array<RuleNode>, // 索引签名\n  tagList: Array<RuleNode>,\n  classList: Array<RuleNode>,\n  attrList: Array<RuleNode>\n}\nexport interface RuleSetMap {\n  global: RuleSet,\n  [key: string]: RuleSet\n}\n\nexport const RuleKeyMap: Record<string, string> = {\n  'tagList': 'tagMap',\n  'classList': 'classMap',\n  'idList': 'idMap'\n}\n\nexport const collectStyle = function(ruleSetMap: RuleSetMap){\n  if(!__GLOBAL__.CSSOM){\n    const defaultRuleSetGroup = {\n      global: {\n        tagMap: new Map(),\n        classMap: new Map(),\n        idMap: new Map()\n      }\n    }\n    __GLOBAL__.CSSOM = defaultRuleSetGroup\n  }\n  Object.keys(ruleSetMap).forEach((group:string) => {\n    let ruleSet = ruleSetMap[group]\n    collectStyleGroup(ruleSet, group)\n  })\n}\n\nconst collectStyleGroup = function(ruleSet: RuleSet, group: string){\n  if(!__GLOBAL__.CSSOM[group]){\n    const defaultRuleSet = {\n      tagMap: new Map(),\n      classMap: new Map(),\n      idMap: new Map()\n    }\n    __GLOBAL__.CSSOM[group] = defaultRuleSet\n  }\n  Object.keys(ruleSet).forEach((ruleKey:string) => {\n    let ruleList = ruleSet[ruleKey]\n    let key = RuleKeyMap[ruleKey]\n    key && ruleList.forEach((rule:RuleNode) => {\n      if(rule){\n        let selectorMap = __GLOBAL__.CSSOM[group][key]\n        let styleList = selectorMap.get(rule.selector) || []\n        styleList.push(rule)\n        __GLOBAL__.CSSOM[group][key].set(rule.selector, styleList)\n      }\n    })\n  })\n}\n\n\n\n","import { createRenderer, RootRenderFunction, CreateAppFunction, isVNode, createVNode,AppContext } from \"@vue/runtime-core\";\nimport { Base, Page } from './nodes/index'\nimport { nodeOps } from './nodeOps'\nimport { patchProp } from './patchProp'\nimport document from './nodes/document'\nimport {PageOptions} from './nodes'\nimport {install} from './api'\nimport {initPageLifeCycle} from './helper/lifecycle-helper'\n\nexport {\n  use,\n  mixin,\n  directive,\n  component\n} from './api'\n\nconst extend = Object.assign\nconst { render: baseRender, createApp: baseCreateApp } = createRenderer(\n  extend({ patchProp }, nodeOps)\n)\n\nexport const renderApp = baseRender as RootRenderFunction<Base>\nexport let appContext:(AppContext | null) = null;\n\n// 供自定义渲染组件渲染 Slot 模块使用，保证 AppContext 和 Global Context 统一\nexport const renderCustomSlot = ((vnode: any | null, container: Base) => {\n  // 支持纯粹的 Component Options Case\n  if(!isVNode(vnode)){\n    vnode = createVNode(vnode);\n  }\n  vnode.appContext = appContext;\n  baseRender(vnode, container);\n}) as RootRenderFunction<Base>\n\nexport const createApp = ((...args) => {\n  const app = baseCreateApp(...args)\n  const { mount } = app\n  app.mount = (container): any => {\n    const proxy = mount(container)\n    return proxy\n  }\n  return app\n}) as CreateAppFunction<Base>\n\nexport {vAnimation} from './directives/vAnimation'\nexport {vShow} from './directives/vShow'\nexport {vModelText, vModelSwitch} from './directives/vModel'\n\nexport * from '@vue/runtime-core'\n\nexport * from './nodes'\n\nexport const createRootContainer = (options: PageOptions):Page => {\n  return document.createPageView(options)\n}\n\nexport function render(App:any){\n  let {pageConfig} = App;\n  let app = createApp(App);\n  install(app);\n  appContext = app._context;\n  let container = createRootContainer({\n    canScroll: pageConfig && pageConfig.canScroll,\n    pageStyle: pageConfig && pageConfig.pageStyle\n  });\n  let {plugins} = App;\n  plugins && plugins.forEach((plugin:any) => {\n    app.use(plugin)\n  })\n  let instance = app.mount(container);\n  initPageLifeCycle(container, instance, App)\n  container.render();\n}\n","<template>\n  <view class=\"page\">\n    <view class=\"demo-item\" :style=\"curPositionStyle\" @pan=\"handlePan\"></view>\n  </view>\n</template>\n<style lang=\"less\" scoped>\n  .page{\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .demo-item{\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100;\n    height: 100;\n    background: #15d0b4;\n  }\n  .image-item{\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<script>\nconst PanEventState = {\n  \"DEFAULT\": 0,\n  \"BEGAN\": 1,\n  \"CHANGED\": 2,\n  \"ENDED\": 3,\n  \"CANCELLED\": 4\n}\nexport default {\n  pageConfig: {\n    canScroll: false\n  },\n  data(){\n    return {\n     positionX: 0,\n     positionY: 0\n    }\n  },\n  computed: {\n    curPositionStyle(){\n      return `left:${this.positionX};top:${this.positionY}`\n    }\n  },\n  methods: {\n    handleTap(){\n\n    },\n    handlePan(e){\n      let {translation, state} = e;\n      if(state === PanEventState.CHANGED){\n        let {deltaX, deltaY} = translation;\n        this.positionX += Number(deltaX);\n        this.positionY += Number(deltaY);\n      }\n    }\n  }\n}\n</script>","export { default } from \"-!../../../../../../../../../usr/local/lib/node_modules/@hummer/cli/node_modules/@hummer/tenon-loader/dist/tenonStyleLoader.js!../../../../../../../../../usr/local/lib/node_modules/@hummer/cli/node_modules/less-loader/dist/cjs.js!../../../../../../../../../usr/local/lib/node_modules/@hummer/cli/node_modules/@hummer/tenon-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./app.vue?vue&type=style&index=0&id=61f312bf&lang=less&scoped=true\"; export * from \"-!../../../../../../../../../usr/local/lib/node_modules/@hummer/cli/node_modules/@hummer/tenon-loader/dist/tenonStyleLoader.js!../../../../../../../../../usr/local/lib/node_modules/@hummer/cli/node_modules/less-loader/dist/cjs.js!../../../../../../../../../usr/local/lib/node_modules/@hummer/cli/node_modules/@hummer/tenon-loader/dist/index.js??ruleSet[1].rules[6].use[0]!./app.vue?vue&type=style&index=0&id=61f312bf&lang=less&scoped=true\"","import { render } from \"./app.vue?vue&type=template&id=61f312bf&scoped=true\"\nimport script from \"./app.vue?vue&type=script&lang=js\"\nexport * from \"./app.vue?vue&type=script&lang=js\"\n\nimport \"./app.vue?vue&type=style&index=0&id=61f312bf&lang=less&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-61f312bf\"\n\nexport default script","import * as Tenon from '@hummer/tenon-vue';\nimport app from './app';\n\nTenon.render(app);\n"],"sourceRoot":""}